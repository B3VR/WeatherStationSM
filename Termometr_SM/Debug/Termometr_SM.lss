
Termometr_SM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800100  0000147e  000014f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000147e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00001536  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001568  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000140  00000000  00000000  000015a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001f06  00000000  00000000  000016e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c51  00000000  00000000  000035ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000eef  00000000  00000000  0000423f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000036c  00000000  00000000  00005130  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006b0  00000000  00000000  0000549c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000014b9  00000000  00000000  00005b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000110  00000000  00000000  00007005  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
       4:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
       8:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
       c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      10:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      14:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      18:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      1c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      20:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      24:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      28:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      2c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      30:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      34:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      38:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      3c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      40:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      44:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      48:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      4c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      50:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      54:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      58:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      5c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      60:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      64:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <weatherStation+0x4a>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
	...

000000ea <__ctors_end>:
      ea:	11 24       	eor	r1, r1
      ec:	1f be       	out	0x3f, r1	; 63
      ee:	cf ef       	ldi	r28, 0xFF	; 255
      f0:	d8 e0       	ldi	r29, 0x08	; 8
      f2:	de bf       	out	0x3e, r29	; 62
      f4:	cd bf       	out	0x3d, r28	; 61

000000f6 <__do_copy_data>:
      f6:	11 e0       	ldi	r17, 0x01	; 1
      f8:	a0 e0       	ldi	r26, 0x00	; 0
      fa:	b1 e0       	ldi	r27, 0x01	; 1
      fc:	ee e7       	ldi	r30, 0x7E	; 126
      fe:	f4 e1       	ldi	r31, 0x14	; 20
     100:	02 c0       	rjmp	.+4      	; 0x106 <__do_copy_data+0x10>
     102:	05 90       	lpm	r0, Z+
     104:	0d 92       	st	X+, r0
     106:	a4 34       	cpi	r26, 0x44	; 68
     108:	b1 07       	cpc	r27, r17
     10a:	d9 f7       	brne	.-10     	; 0x102 <__do_copy_data+0xc>
     10c:	0e 94 39 06 	call	0xc72	; 0xc72 <main>
     110:	0c 94 3d 0a 	jmp	0x147a	; 0x147a <_exit>

00000114 <__bad_interrupt>:
     114:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000118 <dhtxxreadb>:
     118:	0f 93       	push	r16
     11a:	1f 93       	push	r17
     11c:	cf 93       	push	r28
     11e:	df 93       	push	r29
     120:	dc 01       	movw	r26, r24
     122:	fa 01       	movw	r30, r20
     124:	5f b7       	in	r21, 0x3f	; 63
     126:	f8 94       	cli
     128:	eb 01       	movw	r28, r22
     12a:	38 81       	ld	r19, Y
     12c:	92 2f       	mov	r25, r18
     12e:	90 95       	com	r25
     130:	39 23       	and	r19, r25
     132:	38 83       	st	Y, r19
     134:	8c 91       	ld	r24, X
     136:	98 23       	and	r25, r24
     138:	9c 93       	st	X, r25
     13a:	30 e8       	ldi	r19, 0x80	; 128
     13c:	40 e0       	ldi	r20, 0x00	; 0
     13e:	2a c0       	rjmp	.+84     	; 0x194 <dhtxxreadb+0x7c>
     140:	81 e0       	ldi	r24, 0x01	; 1
     142:	89 0f       	add	r24, r25
     144:	9d 33       	cpi	r25, 0x3D	; 61
     146:	18 f0       	brcs	.+6      	; 0x14e <dhtxxreadb+0x36>
     148:	5f bf       	out	0x3f, r21	; 63
     14a:	81 e0       	ldi	r24, 0x01	; 1
     14c:	29 c0       	rjmp	.+82     	; 0x1a0 <dhtxxreadb+0x88>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     14e:	d5 e0       	ldi	r29, 0x05	; 5
     150:	da 95       	dec	r29
     152:	f1 f7       	brne	.-4      	; 0x150 <dhtxxreadb+0x38>
     154:	00 00       	nop
     156:	98 2f       	mov	r25, r24
     158:	01 c0       	rjmp	.+2      	; 0x15c <dhtxxreadb+0x44>
     15a:	90 e0       	ldi	r25, 0x00	; 0
     15c:	80 81       	ld	r24, Z
     15e:	82 23       	and	r24, r18
     160:	79 f3       	breq	.-34     	; 0x140 <dhtxxreadb+0x28>
     162:	80 ea       	ldi	r24, 0xA0	; 160
     164:	8a 95       	dec	r24
     166:	f1 f7       	brne	.-4      	; 0x164 <dhtxxreadb+0x4c>
     168:	80 81       	ld	r24, Z
     16a:	82 23       	and	r24, r18
     16c:	09 f0       	breq	.+2      	; 0x170 <dhtxxreadb+0x58>
     16e:	43 2b       	or	r20, r19
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	0c c0       	rjmp	.+24     	; 0x18c <dhtxxreadb+0x74>
     174:	81 e0       	ldi	r24, 0x01	; 1
     176:	89 0f       	add	r24, r25
     178:	9d 33       	cpi	r25, 0x3D	; 61
     17a:	18 f0       	brcs	.+6      	; 0x182 <dhtxxreadb+0x6a>
     17c:	5f bf       	out	0x3f, r21	; 63
     17e:	81 e0       	ldi	r24, 0x01	; 1
     180:	0f c0       	rjmp	.+30     	; 0x1a0 <dhtxxreadb+0x88>
     182:	95 e0       	ldi	r25, 0x05	; 5
     184:	9a 95       	dec	r25
     186:	f1 f7       	brne	.-4      	; 0x184 <dhtxxreadb+0x6c>
     188:	00 00       	nop
     18a:	98 2f       	mov	r25, r24
     18c:	80 81       	ld	r24, Z
     18e:	82 23       	and	r24, r18
     190:	89 f7       	brne	.-30     	; 0x174 <dhtxxreadb+0x5c>
     192:	36 95       	lsr	r19
     194:	31 11       	cpse	r19, r1
     196:	e1 cf       	rjmp	.-62     	; 0x15a <dhtxxreadb+0x42>
     198:	e8 01       	movw	r28, r16
     19a:	48 83       	st	Y, r20
     19c:	5f bf       	out	0x3f, r21	; 63
     19e:	80 e0       	ldi	r24, 0x00	; 0
     1a0:	df 91       	pop	r29
     1a2:	cf 91       	pop	r28
     1a4:	1f 91       	pop	r17
     1a6:	0f 91       	pop	r16
     1a8:	08 95       	ret

000001aa <dhtxxread>:
     1aa:	2f 92       	push	r2
     1ac:	3f 92       	push	r3
     1ae:	4f 92       	push	r4
     1b0:	5f 92       	push	r5
     1b2:	6f 92       	push	r6
     1b4:	7f 92       	push	r7
     1b6:	8f 92       	push	r8
     1b8:	9f 92       	push	r9
     1ba:	af 92       	push	r10
     1bc:	bf 92       	push	r11
     1be:	cf 92       	push	r12
     1c0:	df 92       	push	r13
     1c2:	ef 92       	push	r14
     1c4:	ff 92       	push	r15
     1c6:	0f 93       	push	r16
     1c8:	1f 93       	push	r17
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	00 d0       	rcall	.+0      	; 0x1d0 <dhtxxread+0x26>
     1d0:	00 d0       	rcall	.+0      	; 0x1d2 <dhtxxread+0x28>
     1d2:	1f 92       	push	r1
     1d4:	cd b7       	in	r28, 0x3d	; 61
     1d6:	de b7       	in	r29, 0x3e	; 62
     1d8:	9f b7       	in	r25, 0x3f	; 63
     1da:	82 30       	cpi	r24, 0x02	; 2
     1dc:	08 f0       	brcs	.+2      	; 0x1e0 <dhtxxread+0x36>
     1de:	a7 c0       	rjmp	.+334    	; 0x32e <dhtxxread+0x184>
     1e0:	da 01       	movw	r26, r20
     1e2:	fc 91       	ld	r31, X
     1e4:	e0 2f       	mov	r30, r16
     1e6:	e0 95       	com	r30
     1e8:	fe 23       	and	r31, r30
     1ea:	fc 93       	st	X, r31
     1ec:	db 01       	movw	r26, r22
     1ee:	fc 91       	ld	r31, X
     1f0:	fe 23       	and	r31, r30
     1f2:	fc 93       	st	X, r31
     1f4:	da 01       	movw	r26, r20
     1f6:	fc 91       	ld	r31, X
     1f8:	f0 2b       	or	r31, r16
     1fa:	fc 93       	st	X, r31
     1fc:	81 30       	cpi	r24, 0x01	; 1
     1fe:	39 f4       	brne	.+14     	; 0x20e <dhtxxread+0x64>
     200:	af ec       	ldi	r26, 0xCF	; 207
     202:	b7 e0       	ldi	r27, 0x07	; 7
     204:	11 97       	sbiw	r26, 0x01	; 1
     206:	f1 f7       	brne	.-4      	; 0x204 <dhtxxread+0x5a>
     208:	00 c0       	rjmp	.+0      	; 0x20a <dhtxxread+0x60>
     20a:	00 00       	nop
     20c:	09 c0       	rjmp	.+18     	; 0x220 <dhtxxread+0x76>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     20e:	bf ef       	ldi	r27, 0xFF	; 255
     210:	f0 ee       	ldi	r31, 0xE0	; 224
     212:	a0 e0       	ldi	r26, 0x00	; 0
     214:	b1 50       	subi	r27, 0x01	; 1
     216:	f0 40       	sbci	r31, 0x00	; 0
     218:	a0 40       	sbci	r26, 0x00	; 0
     21a:	e1 f7       	brne	.-8      	; 0x214 <dhtxxread+0x6a>
     21c:	00 c0       	rjmp	.+0      	; 0x21e <dhtxxread+0x74>
     21e:	00 00       	nop
     220:	f8 94       	cli
     222:	da 01       	movw	r26, r20
     224:	fc 91       	ld	r31, X
     226:	ef 23       	and	r30, r31
     228:	ec 93       	st	X, r30
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     22a:	e7 e1       	ldi	r30, 0x17	; 23
     22c:	f1 e0       	ldi	r31, 0x01	; 1
     22e:	31 97       	sbiw	r30, 0x01	; 1
     230:	f1 f7       	brne	.-4      	; 0x22e <dhtxxread+0x84>
     232:	00 c0       	rjmp	.+0      	; 0x234 <dhtxxread+0x8a>
     234:	00 00       	nop
     236:	d9 01       	movw	r26, r18
     238:	5c 90       	ld	r5, X
     23a:	50 22       	and	r5, r16
     23c:	21 f0       	breq	.+8      	; 0x246 <dhtxxread+0x9c>
     23e:	9f bf       	out	0x3f, r25	; 63
     240:	55 24       	eor	r5, r5
     242:	53 94       	inc	r5
     244:	7e c0       	rjmp	.+252    	; 0x342 <dhtxxread+0x198>
     246:	ef e3       	ldi	r30, 0x3F	; 63
     248:	f1 e0       	ldi	r31, 0x01	; 1
     24a:	31 97       	sbiw	r30, 0x01	; 1
     24c:	f1 f7       	brne	.-4      	; 0x24a <dhtxxread+0xa0>
     24e:	00 c0       	rjmp	.+0      	; 0x250 <dhtxxread+0xa6>
     250:	00 00       	nop
     252:	d9 01       	movw	r26, r18
     254:	ec 91       	ld	r30, X
     256:	e0 23       	and	r30, r16
     258:	21 f4       	brne	.+8      	; 0x262 <dhtxxread+0xb8>
     25a:	9f bf       	out	0x3f, r25	; 63
     25c:	55 24       	eor	r5, r5
     25e:	53 94       	inc	r5
     260:	70 c0       	rjmp	.+224    	; 0x342 <dhtxxread+0x198>
     262:	40 2e       	mov	r4, r16
     264:	39 01       	movw	r6, r18
     266:	5a 01       	movw	r10, r20
     268:	4b 01       	movw	r8, r22
     26a:	38 2e       	mov	r3, r24
     26c:	9f bf       	out	0x3f, r25	; 63
     26e:	b5 ed       	ldi	r27, 0xD5	; 213
     270:	ba 95       	dec	r27
     272:	f1 f7       	brne	.-4      	; 0x270 <dhtxxread+0xc6>
     274:	00 00       	nop
     276:	21 2c       	mov	r2, r1
     278:	0f c0       	rjmp	.+30     	; 0x298 <dhtxxread+0xee>
     27a:	01 e0       	ldi	r16, 0x01	; 1
     27c:	10 e0       	ldi	r17, 0x00	; 0
     27e:	0c 0f       	add	r16, r28
     280:	1d 1f       	adc	r17, r29
     282:	02 0d       	add	r16, r2
     284:	11 1d       	adc	r17, r1
     286:	24 2d       	mov	r18, r4
     288:	a3 01       	movw	r20, r6
     28a:	b5 01       	movw	r22, r10
     28c:	c4 01       	movw	r24, r8
     28e:	0e 94 8c 00 	call	0x118	; 0x118 <dhtxxreadb>
     292:	81 11       	cpse	r24, r1
     294:	51 c0       	rjmp	.+162    	; 0x338 <dhtxxread+0x18e>
     296:	23 94       	inc	r2
     298:	e4 e0       	ldi	r30, 0x04	; 4
     29a:	e2 15       	cp	r30, r2
     29c:	70 f7       	brcc	.-36     	; 0x27a <dhtxxread+0xd0>
     29e:	80 e0       	ldi	r24, 0x00	; 0
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	09 c0       	rjmp	.+18     	; 0x2b6 <dhtxxread+0x10c>
     2a4:	e1 e0       	ldi	r30, 0x01	; 1
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	ec 0f       	add	r30, r28
     2aa:	fd 1f       	adc	r31, r29
     2ac:	e8 0f       	add	r30, r24
     2ae:	f1 1d       	adc	r31, r1
     2b0:	20 81       	ld	r18, Z
     2b2:	92 0f       	add	r25, r18
     2b4:	8f 5f       	subi	r24, 0xFF	; 255
     2b6:	84 30       	cpi	r24, 0x04	; 4
     2b8:	a8 f3       	brcs	.-22     	; 0x2a4 <dhtxxread+0xfa>
     2ba:	8d 81       	ldd	r24, Y+5	; 0x05
     2bc:	98 13       	cpse	r25, r24
     2be:	3e c0       	rjmp	.+124    	; 0x33c <dhtxxread+0x192>
     2c0:	f1 e0       	ldi	r31, 0x01	; 1
     2c2:	3f 12       	cpse	r3, r31
     2c4:	13 c0       	rjmp	.+38     	; 0x2ec <dhtxxread+0x142>
     2c6:	89 81       	ldd	r24, Y+1	; 0x01
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	98 2f       	mov	r25, r24
     2cc:	88 27       	eor	r24, r24
     2ce:	2a 81       	ldd	r18, Y+2	; 0x02
     2d0:	82 2b       	or	r24, r18
     2d2:	d6 01       	movw	r26, r12
     2d4:	8d 93       	st	X+, r24
     2d6:	9c 93       	st	X, r25
     2d8:	8b 81       	ldd	r24, Y+3	; 0x03
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	98 2f       	mov	r25, r24
     2de:	88 27       	eor	r24, r24
     2e0:	2c 81       	ldd	r18, Y+4	; 0x04
     2e2:	82 2b       	or	r24, r18
     2e4:	f7 01       	movw	r30, r14
     2e6:	91 83       	std	Z+1, r25	; 0x01
     2e8:	80 83       	st	Z, r24
     2ea:	2b c0       	rjmp	.+86     	; 0x342 <dhtxxread+0x198>
     2ec:	89 81       	ldd	r24, Y+1	; 0x01
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	9c 01       	movw	r18, r24
     2f2:	22 0f       	add	r18, r18
     2f4:	33 1f       	adc	r19, r19
     2f6:	88 0f       	add	r24, r24
     2f8:	99 1f       	adc	r25, r25
     2fa:	88 0f       	add	r24, r24
     2fc:	99 1f       	adc	r25, r25
     2fe:	88 0f       	add	r24, r24
     300:	99 1f       	adc	r25, r25
     302:	82 0f       	add	r24, r18
     304:	93 1f       	adc	r25, r19
     306:	d6 01       	movw	r26, r12
     308:	8d 93       	st	X+, r24
     30a:	9c 93       	st	X, r25
     30c:	8b 81       	ldd	r24, Y+3	; 0x03
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	9c 01       	movw	r18, r24
     312:	22 0f       	add	r18, r18
     314:	33 1f       	adc	r19, r19
     316:	88 0f       	add	r24, r24
     318:	99 1f       	adc	r25, r25
     31a:	88 0f       	add	r24, r24
     31c:	99 1f       	adc	r25, r25
     31e:	88 0f       	add	r24, r24
     320:	99 1f       	adc	r25, r25
     322:	82 0f       	add	r24, r18
     324:	93 1f       	adc	r25, r19
     326:	f7 01       	movw	r30, r14
     328:	91 83       	std	Z+1, r25	; 0x01
     32a:	80 83       	st	Z, r24
     32c:	0a c0       	rjmp	.+20     	; 0x342 <dhtxxread+0x198>
     32e:	0f 2e       	mov	r0, r31
     330:	f3 e0       	ldi	r31, 0x03	; 3
     332:	5f 2e       	mov	r5, r31
     334:	f0 2d       	mov	r31, r0
     336:	05 c0       	rjmp	.+10     	; 0x342 <dhtxxread+0x198>
     338:	58 2e       	mov	r5, r24
     33a:	03 c0       	rjmp	.+6      	; 0x342 <dhtxxread+0x198>
     33c:	68 94       	set
     33e:	55 24       	eor	r5, r5
     340:	51 f8       	bld	r5, 1
     342:	85 2d       	mov	r24, r5
     344:	0f 90       	pop	r0
     346:	0f 90       	pop	r0
     348:	0f 90       	pop	r0
     34a:	0f 90       	pop	r0
     34c:	0f 90       	pop	r0
     34e:	df 91       	pop	r29
     350:	cf 91       	pop	r28
     352:	1f 91       	pop	r17
     354:	0f 91       	pop	r16
     356:	ff 90       	pop	r15
     358:	ef 90       	pop	r14
     35a:	df 90       	pop	r13
     35c:	cf 90       	pop	r12
     35e:	bf 90       	pop	r11
     360:	af 90       	pop	r10
     362:	9f 90       	pop	r9
     364:	8f 90       	pop	r8
     366:	7f 90       	pop	r7
     368:	6f 90       	pop	r6
     36a:	5f 90       	pop	r5
     36c:	4f 90       	pop	r4
     36e:	3f 90       	pop	r3
     370:	2f 90       	pop	r2
     372:	08 95       	ret

00000374 <dhtxxconvert>:
     374:	0f 93       	push	r16
     376:	9f b7       	in	r25, 0x3f	; 63
     378:	82 30       	cpi	r24, 0x02	; 2
     37a:	a0 f5       	brcc	.+104    	; 0x3e4 <dhtxxconvert+0x70>
     37c:	da 01       	movw	r26, r20
     37e:	fc 91       	ld	r31, X
     380:	e0 2f       	mov	r30, r16
     382:	e0 95       	com	r30
     384:	fe 23       	and	r31, r30
     386:	fc 93       	st	X, r31
     388:	db 01       	movw	r26, r22
     38a:	fc 91       	ld	r31, X
     38c:	fe 23       	and	r31, r30
     38e:	fc 93       	st	X, r31
     390:	da 01       	movw	r26, r20
     392:	6c 91       	ld	r22, X
     394:	60 2b       	or	r22, r16
     396:	6c 93       	st	X, r22
     398:	81 30       	cpi	r24, 0x01	; 1
     39a:	39 f4       	brne	.+14     	; 0x3aa <dhtxxconvert+0x36>
     39c:	af ec       	ldi	r26, 0xCF	; 207
     39e:	b7 e0       	ldi	r27, 0x07	; 7
     3a0:	11 97       	sbiw	r26, 0x01	; 1
     3a2:	f1 f7       	brne	.-4      	; 0x3a0 <dhtxxconvert+0x2c>
     3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <dhtxxconvert+0x32>
     3a6:	00 00       	nop
     3a8:	09 c0       	rjmp	.+18     	; 0x3bc <dhtxxconvert+0x48>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3aa:	bf ef       	ldi	r27, 0xFF	; 255
     3ac:	f0 ee       	ldi	r31, 0xE0	; 224
     3ae:	60 e0       	ldi	r22, 0x00	; 0
     3b0:	b1 50       	subi	r27, 0x01	; 1
     3b2:	f0 40       	sbci	r31, 0x00	; 0
     3b4:	60 40       	sbci	r22, 0x00	; 0
     3b6:	e1 f7       	brne	.-8      	; 0x3b0 <dhtxxconvert+0x3c>
     3b8:	00 c0       	rjmp	.+0      	; 0x3ba <dhtxxconvert+0x46>
     3ba:	00 00       	nop
     3bc:	f8 94       	cli
     3be:	da 01       	movw	r26, r20
     3c0:	8c 91       	ld	r24, X
     3c2:	e8 23       	and	r30, r24
     3c4:	ec 93       	st	X, r30
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3c6:	e7 e1       	ldi	r30, 0x17	; 23
     3c8:	f1 e0       	ldi	r31, 0x01	; 1
     3ca:	31 97       	sbiw	r30, 0x01	; 1
     3cc:	f1 f7       	brne	.-4      	; 0x3ca <dhtxxconvert+0x56>
     3ce:	00 c0       	rjmp	.+0      	; 0x3d0 <dhtxxconvert+0x5c>
     3d0:	00 00       	nop
     3d2:	d9 01       	movw	r26, r18
     3d4:	8c 91       	ld	r24, X
     3d6:	80 23       	and	r24, r16
     3d8:	19 f0       	breq	.+6      	; 0x3e0 <dhtxxconvert+0x6c>
     3da:	9f bf       	out	0x3f, r25	; 63
     3dc:	81 e0       	ldi	r24, 0x01	; 1
     3de:	03 c0       	rjmp	.+6      	; 0x3e6 <dhtxxconvert+0x72>
     3e0:	9f bf       	out	0x3f, r25	; 63
     3e2:	01 c0       	rjmp	.+2      	; 0x3e6 <dhtxxconvert+0x72>
     3e4:	83 e0       	ldi	r24, 0x03	; 3
     3e6:	0f 91       	pop	r16
     3e8:	08 95       	ret

000003ea <lcd_write>:
     3ea:	66 23       	and	r22, r22
     3ec:	21 f0       	breq	.+8      	; 0x3f6 <lcd_write+0xc>
     3ee:	95 b1       	in	r25, 0x05	; 5
     3f0:	91 60       	ori	r25, 0x01	; 1
     3f2:	95 b9       	out	0x05, r25	; 5
     3f4:	03 c0       	rjmp	.+6      	; 0x3fc <lcd_write+0x12>
     3f6:	95 b1       	in	r25, 0x05	; 5
     3f8:	9e 7f       	andi	r25, 0xFE	; 254
     3fa:	95 b9       	out	0x05, r25	; 5
     3fc:	88 23       	and	r24, r24
     3fe:	24 f4       	brge	.+8      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
     400:	95 b1       	in	r25, 0x05	; 5
     402:	90 62       	ori	r25, 0x20	; 32
     404:	95 b9       	out	0x05, r25	; 5
     406:	03 c0       	rjmp	.+6      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
     408:	95 b1       	in	r25, 0x05	; 5
     40a:	9f 7d       	andi	r25, 0xDF	; 223
     40c:	95 b9       	out	0x05, r25	; 5
     40e:	86 ff       	sbrs	r24, 6
     410:	04 c0       	rjmp	.+8      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     412:	95 b1       	in	r25, 0x05	; 5
     414:	90 61       	ori	r25, 0x10	; 16
     416:	95 b9       	out	0x05, r25	; 5
     418:	03 c0       	rjmp	.+6      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     41a:	95 b1       	in	r25, 0x05	; 5
     41c:	9f 7e       	andi	r25, 0xEF	; 239
     41e:	95 b9       	out	0x05, r25	; 5
     420:	85 ff       	sbrs	r24, 5
     422:	04 c0       	rjmp	.+8      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
     424:	95 b1       	in	r25, 0x05	; 5
     426:	98 60       	ori	r25, 0x08	; 8
     428:	95 b9       	out	0x05, r25	; 5
     42a:	03 c0       	rjmp	.+6      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     42c:	95 b1       	in	r25, 0x05	; 5
     42e:	97 7f       	andi	r25, 0xF7	; 247
     430:	95 b9       	out	0x05, r25	; 5
     432:	84 ff       	sbrs	r24, 4
     434:	04 c0       	rjmp	.+8      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
     436:	95 b1       	in	r25, 0x05	; 5
     438:	94 60       	ori	r25, 0x04	; 4
     43a:	95 b9       	out	0x05, r25	; 5
     43c:	03 c0       	rjmp	.+6      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
     43e:	95 b1       	in	r25, 0x05	; 5
     440:	9b 7f       	andi	r25, 0xFB	; 251
     442:	95 b9       	out	0x05, r25	; 5
     444:	00 c0       	rjmp	.+0      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     446:	95 b1       	in	r25, 0x05	; 5
     448:	92 60       	ori	r25, 0x02	; 2
     44a:	95 b9       	out	0x05, r25	; 5
     44c:	92 e0       	ldi	r25, 0x02	; 2
     44e:	9a 95       	dec	r25
     450:	f1 f7       	brne	.-4      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
     452:	00 c0       	rjmp	.+0      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
     454:	95 b1       	in	r25, 0x05	; 5
     456:	9d 7f       	andi	r25, 0xFD	; 253
     458:	95 b9       	out	0x05, r25	; 5
     45a:	83 ff       	sbrs	r24, 3
     45c:	04 c0       	rjmp	.+8      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
     45e:	95 b1       	in	r25, 0x05	; 5
     460:	90 62       	ori	r25, 0x20	; 32
     462:	95 b9       	out	0x05, r25	; 5
     464:	03 c0       	rjmp	.+6      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
     466:	95 b1       	in	r25, 0x05	; 5
     468:	9f 7d       	andi	r25, 0xDF	; 223
     46a:	95 b9       	out	0x05, r25	; 5
     46c:	82 ff       	sbrs	r24, 2
     46e:	04 c0       	rjmp	.+8      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
     470:	95 b1       	in	r25, 0x05	; 5
     472:	90 61       	ori	r25, 0x10	; 16
     474:	95 b9       	out	0x05, r25	; 5
     476:	03 c0       	rjmp	.+6      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     478:	95 b1       	in	r25, 0x05	; 5
     47a:	9f 7e       	andi	r25, 0xEF	; 239
     47c:	95 b9       	out	0x05, r25	; 5
     47e:	81 ff       	sbrs	r24, 1
     480:	04 c0       	rjmp	.+8      	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
     482:	95 b1       	in	r25, 0x05	; 5
     484:	98 60       	ori	r25, 0x08	; 8
     486:	95 b9       	out	0x05, r25	; 5
     488:	03 c0       	rjmp	.+6      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
     48a:	95 b1       	in	r25, 0x05	; 5
     48c:	97 7f       	andi	r25, 0xF7	; 247
     48e:	95 b9       	out	0x05, r25	; 5
     490:	80 ff       	sbrs	r24, 0
     492:	04 c0       	rjmp	.+8      	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
     494:	95 b1       	in	r25, 0x05	; 5
     496:	94 60       	ori	r25, 0x04	; 4
     498:	95 b9       	out	0x05, r25	; 5
     49a:	03 c0       	rjmp	.+6      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
     49c:	95 b1       	in	r25, 0x05	; 5
     49e:	9b 7f       	andi	r25, 0xFB	; 251
     4a0:	95 b9       	out	0x05, r25	; 5
     4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
     4a4:	95 b1       	in	r25, 0x05	; 5
     4a6:	92 60       	ori	r25, 0x02	; 2
     4a8:	95 b9       	out	0x05, r25	; 5
     4aa:	92 e0       	ldi	r25, 0x02	; 2
     4ac:	9a 95       	dec	r25
     4ae:	f1 f7       	brne	.-4      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
     4b0:	00 c0       	rjmp	.+0      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
     4b2:	95 b1       	in	r25, 0x05	; 5
     4b4:	9d 7f       	andi	r25, 0xFD	; 253
     4b6:	95 b9       	out	0x05, r25	; 5
     4b8:	95 b1       	in	r25, 0x05	; 5
     4ba:	90 62       	ori	r25, 0x20	; 32
     4bc:	95 b9       	out	0x05, r25	; 5
     4be:	95 b1       	in	r25, 0x05	; 5
     4c0:	90 61       	ori	r25, 0x10	; 16
     4c2:	95 b9       	out	0x05, r25	; 5
     4c4:	95 b1       	in	r25, 0x05	; 5
     4c6:	98 60       	ori	r25, 0x08	; 8
     4c8:	95 b9       	out	0x05, r25	; 5
     4ca:	95 b1       	in	r25, 0x05	; 5
     4cc:	94 60       	ori	r25, 0x04	; 4
     4ce:	95 b9       	out	0x05, r25	; 5
     4d0:	61 11       	cpse	r22, r1
     4d2:	09 c0       	rjmp	.+18     	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
     4d4:	84 30       	cpi	r24, 0x04	; 4
     4d6:	38 f4       	brcc	.+14     	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
     4d8:	8f e9       	ldi	r24, 0x9F	; 159
     4da:	99 e1       	ldi	r25, 0x19	; 25
     4dc:	01 97       	sbiw	r24, 0x01	; 1
     4de:	f1 f7       	brne	.-4      	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
     4e0:	00 c0       	rjmp	.+0      	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
     4e2:	00 00       	nop
     4e4:	08 95       	ret
     4e6:	95 ed       	ldi	r25, 0xD5	; 213
     4e8:	9a 95       	dec	r25
     4ea:	f1 f7       	brne	.-4      	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
     4ec:	00 00       	nop
     4ee:	08 95       	ret

000004f0 <lcd_command>:
     4f0:	60 e0       	ldi	r22, 0x00	; 0
     4f2:	0e 94 f5 01 	call	0x3ea	; 0x3ea <lcd_write>
     4f6:	08 95       	ret

000004f8 <lcd_goto>:
     4f8:	80 58       	subi	r24, 0x80	; 128
     4fa:	0e 94 78 02 	call	0x4f0	; 0x4f0 <lcd_command>
     4fe:	08 95       	ret

00000500 <lcd_clrscr>:
     500:	81 e0       	ldi	r24, 0x01	; 1
     502:	0e 94 78 02 	call	0x4f0	; 0x4f0 <lcd_command>
     506:	08 95       	ret

00000508 <lcd_putc>:
     508:	61 e0       	ldi	r22, 0x01	; 1
     50a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <lcd_write>
     50e:	08 95       	ret

00000510 <lcd_puts>:
     510:	cf 93       	push	r28
     512:	df 93       	push	r29
     514:	fc 01       	movw	r30, r24
     516:	03 c0       	rjmp	.+6      	; 0x51e <lcd_puts+0xe>
     518:	0e 94 84 02 	call	0x508	; 0x508 <lcd_putc>
     51c:	fe 01       	movw	r30, r28
     51e:	ef 01       	movw	r28, r30
     520:	21 96       	adiw	r28, 0x01	; 1
     522:	80 81       	ld	r24, Z
     524:	81 11       	cpse	r24, r1
     526:	f8 cf       	rjmp	.-16     	; 0x518 <lcd_puts+0x8>
     528:	df 91       	pop	r29
     52a:	cf 91       	pop	r28
     52c:	08 95       	ret

0000052e <lcd_init>:
     52e:	84 b1       	in	r24, 0x04	; 4
     530:	82 60       	ori	r24, 0x02	; 2
     532:	84 b9       	out	0x04, r24	; 4
     534:	84 b1       	in	r24, 0x04	; 4
     536:	81 60       	ori	r24, 0x01	; 1
     538:	84 b9       	out	0x04, r24	; 4
     53a:	84 b1       	in	r24, 0x04	; 4
     53c:	80 62       	ori	r24, 0x20	; 32
     53e:	84 b9       	out	0x04, r24	; 4
     540:	84 b1       	in	r24, 0x04	; 4
     542:	80 61       	ori	r24, 0x10	; 16
     544:	84 b9       	out	0x04, r24	; 4
     546:	84 b1       	in	r24, 0x04	; 4
     548:	88 60       	ori	r24, 0x08	; 8
     54a:	84 b9       	out	0x04, r24	; 4
     54c:	84 b1       	in	r24, 0x04	; 4
     54e:	84 60       	ori	r24, 0x04	; 4
     550:	84 b9       	out	0x04, r24	; 4
     552:	85 b1       	in	r24, 0x05	; 5
     554:	8d 7f       	andi	r24, 0xFD	; 253
     556:	85 b9       	out	0x05, r24	; 5
     558:	85 b1       	in	r24, 0x05	; 5
     55a:	8e 7f       	andi	r24, 0xFE	; 254
     55c:	85 b9       	out	0x05, r24	; 5
     55e:	85 b1       	in	r24, 0x05	; 5
     560:	80 62       	ori	r24, 0x20	; 32
     562:	85 b9       	out	0x05, r24	; 5
     564:	85 b1       	in	r24, 0x05	; 5
     566:	80 61       	ori	r24, 0x10	; 16
     568:	85 b9       	out	0x05, r24	; 5
     56a:	85 b1       	in	r24, 0x05	; 5
     56c:	88 60       	ori	r24, 0x08	; 8
     56e:	85 b9       	out	0x05, r24	; 5
     570:	85 b1       	in	r24, 0x05	; 5
     572:	84 60       	ori	r24, 0x04	; 4
     574:	85 b9       	out	0x05, r24	; 5
     576:	8f e5       	ldi	r24, 0x5F	; 95
     578:	9a ee       	ldi	r25, 0xEA	; 234
     57a:	01 97       	sbiw	r24, 0x01	; 1
     57c:	f1 f7       	brne	.-4      	; 0x57a <lcd_init+0x4c>
     57e:	00 c0       	rjmp	.+0      	; 0x580 <lcd_init+0x52>
     580:	00 00       	nop
     582:	85 b1       	in	r24, 0x05	; 5
     584:	8f 7d       	andi	r24, 0xDF	; 223
     586:	85 b9       	out	0x05, r24	; 5
     588:	85 b1       	in	r24, 0x05	; 5
     58a:	8f 7e       	andi	r24, 0xEF	; 239
     58c:	85 b9       	out	0x05, r24	; 5
     58e:	00 c0       	rjmp	.+0      	; 0x590 <lcd_init+0x62>
     590:	85 b1       	in	r24, 0x05	; 5
     592:	82 60       	ori	r24, 0x02	; 2
     594:	85 b9       	out	0x05, r24	; 5
     596:	92 e0       	ldi	r25, 0x02	; 2
     598:	9a 95       	dec	r25
     59a:	f1 f7       	brne	.-4      	; 0x598 <lcd_init+0x6a>
     59c:	00 c0       	rjmp	.+0      	; 0x59e <lcd_init+0x70>
     59e:	85 b1       	in	r24, 0x05	; 5
     5a0:	8d 7f       	andi	r24, 0xFD	; 253
     5a2:	85 b9       	out	0x05, r24	; 5
     5a4:	8f e0       	ldi	r24, 0x0F	; 15
     5a6:	90 e4       	ldi	r25, 0x40	; 64
     5a8:	01 97       	sbiw	r24, 0x01	; 1
     5aa:	f1 f7       	brne	.-4      	; 0x5a8 <lcd_init+0x7a>
     5ac:	00 c0       	rjmp	.+0      	; 0x5ae <lcd_init+0x80>
     5ae:	00 00       	nop
     5b0:	85 b1       	in	r24, 0x05	; 5
     5b2:	82 60       	ori	r24, 0x02	; 2
     5b4:	85 b9       	out	0x05, r24	; 5
     5b6:	92 e0       	ldi	r25, 0x02	; 2
     5b8:	9a 95       	dec	r25
     5ba:	f1 f7       	brne	.-4      	; 0x5b8 <lcd_init+0x8a>
     5bc:	00 c0       	rjmp	.+0      	; 0x5be <lcd_init+0x90>
     5be:	85 b1       	in	r24, 0x05	; 5
     5c0:	8d 7f       	andi	r24, 0xFD	; 253
     5c2:	85 b9       	out	0x05, r24	; 5
     5c4:	8f e8       	ldi	r24, 0x8F	; 143
     5c6:	91 e0       	ldi	r25, 0x01	; 1
     5c8:	01 97       	sbiw	r24, 0x01	; 1
     5ca:	f1 f7       	brne	.-4      	; 0x5c8 <lcd_init+0x9a>
     5cc:	00 c0       	rjmp	.+0      	; 0x5ce <lcd_init+0xa0>
     5ce:	00 00       	nop
     5d0:	85 b1       	in	r24, 0x05	; 5
     5d2:	82 60       	ori	r24, 0x02	; 2
     5d4:	85 b9       	out	0x05, r24	; 5
     5d6:	92 e0       	ldi	r25, 0x02	; 2
     5d8:	9a 95       	dec	r25
     5da:	f1 f7       	brne	.-4      	; 0x5d8 <lcd_init+0xaa>
     5dc:	00 c0       	rjmp	.+0      	; 0x5de <lcd_init+0xb0>
     5de:	85 b1       	in	r24, 0x05	; 5
     5e0:	8d 7f       	andi	r24, 0xFD	; 253
     5e2:	85 b9       	out	0x05, r24	; 5
     5e4:	85 ed       	ldi	r24, 0xD5	; 213
     5e6:	8a 95       	dec	r24
     5e8:	f1 f7       	brne	.-4      	; 0x5e6 <lcd_init+0xb8>
     5ea:	00 00       	nop
     5ec:	85 b1       	in	r24, 0x05	; 5
     5ee:	8b 7f       	andi	r24, 0xFB	; 251
     5f0:	85 b9       	out	0x05, r24	; 5
     5f2:	00 c0       	rjmp	.+0      	; 0x5f4 <lcd_init+0xc6>
     5f4:	85 b1       	in	r24, 0x05	; 5
     5f6:	82 60       	ori	r24, 0x02	; 2
     5f8:	85 b9       	out	0x05, r24	; 5
     5fa:	92 e0       	ldi	r25, 0x02	; 2
     5fc:	9a 95       	dec	r25
     5fe:	f1 f7       	brne	.-4      	; 0x5fc <lcd_init+0xce>
     600:	00 c0       	rjmp	.+0      	; 0x602 <lcd_init+0xd4>
     602:	85 b1       	in	r24, 0x05	; 5
     604:	8d 7f       	andi	r24, 0xFD	; 253
     606:	85 b9       	out	0x05, r24	; 5
     608:	85 ed       	ldi	r24, 0xD5	; 213
     60a:	8a 95       	dec	r24
     60c:	f1 f7       	brne	.-4      	; 0x60a <lcd_init+0xdc>
     60e:	00 00       	nop
     610:	85 b1       	in	r24, 0x05	; 5
     612:	8b 7f       	andi	r24, 0xFB	; 251
     614:	85 b9       	out	0x05, r24	; 5
     616:	00 c0       	rjmp	.+0      	; 0x618 <lcd_init+0xea>
     618:	85 b1       	in	r24, 0x05	; 5
     61a:	82 60       	ori	r24, 0x02	; 2
     61c:	85 b9       	out	0x05, r24	; 5
     61e:	92 e0       	ldi	r25, 0x02	; 2
     620:	9a 95       	dec	r25
     622:	f1 f7       	brne	.-4      	; 0x620 <lcd_init+0xf2>
     624:	00 c0       	rjmp	.+0      	; 0x626 <lcd_init+0xf8>
     626:	85 b1       	in	r24, 0x05	; 5
     628:	8d 7f       	andi	r24, 0xFD	; 253
     62a:	85 b9       	out	0x05, r24	; 5
     62c:	82 e0       	ldi	r24, 0x02	; 2
     62e:	8a 95       	dec	r24
     630:	f1 f7       	brne	.-4      	; 0x62e <lcd_init+0x100>
     632:	00 c0       	rjmp	.+0      	; 0x634 <lcd_init+0x106>
     634:	85 b1       	in	r24, 0x05	; 5
     636:	80 62       	ori	r24, 0x20	; 32
     638:	85 b9       	out	0x05, r24	; 5
     63a:	00 c0       	rjmp	.+0      	; 0x63c <lcd_init+0x10e>
     63c:	85 b1       	in	r24, 0x05	; 5
     63e:	82 60       	ori	r24, 0x02	; 2
     640:	85 b9       	out	0x05, r24	; 5
     642:	92 e0       	ldi	r25, 0x02	; 2
     644:	9a 95       	dec	r25
     646:	f1 f7       	brne	.-4      	; 0x644 <lcd_init+0x116>
     648:	00 c0       	rjmp	.+0      	; 0x64a <lcd_init+0x11c>
     64a:	85 b1       	in	r24, 0x05	; 5
     64c:	8d 7f       	andi	r24, 0xFD	; 253
     64e:	85 b9       	out	0x05, r24	; 5
     650:	85 ed       	ldi	r24, 0xD5	; 213
     652:	8a 95       	dec	r24
     654:	f1 f7       	brne	.-4      	; 0x652 <lcd_init+0x124>
     656:	00 00       	nop
     658:	88 e0       	ldi	r24, 0x08	; 8
     65a:	0e 94 78 02 	call	0x4f0	; 0x4f0 <lcd_command>
     65e:	0e 94 80 02 	call	0x500	; 0x500 <lcd_clrscr>
     662:	86 e0       	ldi	r24, 0x06	; 6
     664:	0e 94 78 02 	call	0x4f0	; 0x4f0 <lcd_command>
     668:	8c e0       	ldi	r24, 0x0C	; 12
     66a:	0e 94 78 02 	call	0x4f0	; 0x4f0 <lcd_command>
     66e:	08 95       	ret

00000670 <ass_i2c_delay_half>:
    : : [SDADDR] "I"  (SDA_DDR), [SDAPIN] "I" (SDA_PIN), [SDAOUT] "I" (SDA_OUT),
      [SCLIN] "I" (SCL_IN), [SCLPIN] "I" (SCL_PIN),
      [HIMAXWAIT] "M" (I2C_MAXWAIT>>8), 
      [LOMAXWAIT] "M" (I2C_MAXWAIT&0xFF)
    : "r30", "r31" ); 
}
     670:	97 e1       	ldi	r25, 0x17	; 23

00000672 <_Lidelay>:
     672:	9a 95       	dec	r25
     674:	f1 f7       	brne	.-4      	; 0x672 <_Lidelay>
     676:	08 95       	ret
     678:	08 95       	ret

0000067a <ass_i2c_wait_scl_high>:
     67a:	35 9b       	sbis	0x06, 5	; 6
     67c:	0c 94 3d 03 	jmp	0x67a	; 0x67a <ass_i2c_wait_scl_high>
     680:	a8 94       	cln
     682:	08 95       	ret
     684:	08 95       	ret

00000686 <i2c_start>:
     686:	35 9b       	sbis	0x06, 5	; 6
     688:	0e 94 3d 03 	call	0x67a	; 0x67a <ass_i2c_wait_scl_high>
     68c:	3c 9a       	sbi	0x07, 4	; 7
     68e:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     692:	0e 94 70 03 	call	0x6e0	; 0x6e0 <ass_i2c_write>
     696:	08 95       	ret
     698:	81 e0       	ldi	r24, 0x01	; 1
     69a:	08 95       	ret

0000069c <i2c_rep_start>:
     69c:	3d 9a       	sbi	0x07, 5	; 7
     69e:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     6a2:	3c 98       	cbi	0x07, 4	; 7
     6a4:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     6a8:	3d 98       	cbi	0x07, 5	; 7
     6aa:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     6ae:	35 9b       	sbis	0x06, 5	; 6
     6b0:	0e 94 3d 03 	call	0x67a	; 0x67a <ass_i2c_wait_scl_high>
     6b4:	3c 9a       	sbi	0x07, 4	; 7
     6b6:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     6ba:	0e 94 70 03 	call	0x6e0	; 0x6e0 <ass_i2c_write>
     6be:	08 95       	ret
     6c0:	81 e0       	ldi	r24, 0x01	; 1
     6c2:	08 95       	ret

000006c4 <ass_i2c_stop>:
#endif
  }
}
#else
{
  __asm__ __volatile__ 
     6c4:	3d 9a       	sbi	0x07, 5	; 7
     6c6:	3c 9a       	sbi	0x07, 4	; 7
     6c8:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     6cc:	3d 98       	cbi	0x07, 5	; 7
     6ce:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     6d2:	35 9b       	sbis	0x06, 5	; 6
     6d4:	0e 94 3d 03 	call	0x67a	; 0x67a <ass_i2c_wait_scl_high>
     6d8:	3c 98       	cbi	0x07, 4	; 7
     6da:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     6de:	08 95       	ret

000006e0 <ass_i2c_write>:
  if( twst != TW_MT_DATA_ACK) return false;
  return true;
}
#else
{
  __asm__ __volatile__ 
     6e0:	08 94       	sec
     6e2:	88 1f       	adc	r24, r24
     6e4:	0c 94 75 03 	jmp	0x6ea	; 0x6ea <_Li2c_write_first>

000006e8 <_Li2c_write_bit>:
     6e8:	88 0f       	add	r24, r24

000006ea <_Li2c_write_first>:
     6ea:	f1 f0       	breq	.+60     	; 0x728 <_Li2c_get_ack>
     6ec:	3d 9a       	sbi	0x07, 5	; 7
     6ee:	00 00       	nop
     6f0:	00 00       	nop
     6f2:	00 00       	nop
     6f4:	20 f4       	brcc	.+8      	; 0x6fe <_Li2c_write_low>
     6f6:	00 00       	nop
     6f8:	3c 98       	cbi	0x07, 4	; 7
     6fa:	0c 94 82 03 	jmp	0x704	; 0x704 <_Li2c_write_high>

000006fe <_Li2c_write_low>:
     6fe:	3c 9a       	sbi	0x07, 4	; 7
     700:	0c 94 82 03 	jmp	0x704	; 0x704 <_Li2c_write_high>

00000704 <_Li2c_write_high>:
     704:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     708:	3d 98       	cbi	0x07, 5	; 7
     70a:	a8 94       	cln
     70c:	00 00       	nop
     70e:	00 00       	nop
     710:	00 00       	nop
     712:	35 9b       	sbis	0x06, 5	; 6
     714:	0e 94 3d 03 	call	0x67a	; 0x67a <ass_i2c_wait_scl_high>
     718:	1a f4       	brpl	.+6      	; 0x720 <_Ldelay_scl_high>

0000071a <_Li2c_write_return_false>:
     71a:	88 27       	eor	r24, r24
     71c:	0c 94 a7 03 	jmp	0x74e	; 0x74e <_Li2c_write_return>

00000720 <_Ldelay_scl_high>:
     720:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     724:	0c 94 74 03 	jmp	0x6e8	; 0x6e8 <_Li2c_write_bit>

00000728 <_Li2c_get_ack>:
     728:	3d 9a       	sbi	0x07, 5	; 7
     72a:	00 00       	nop
     72c:	00 00       	nop
     72e:	3c 98       	cbi	0x07, 4	; 7
     730:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     734:	99 27       	eor	r25, r25
     736:	88 27       	eor	r24, r24
     738:	3d 98       	cbi	0x07, 5	; 7

0000073a <_Li2c_ack_wait>:
     73a:	a8 94       	cln
     73c:	00 00       	nop
     73e:	35 9b       	sbis	0x06, 5	; 6
     740:	0e 94 3d 03 	call	0x67a	; 0x67a <ass_i2c_wait_scl_high>
     744:	52 f3       	brmi	.-44     	; 0x71a <_Li2c_write_return_false>
     746:	34 9b       	sbis	0x06, 4	; 6
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>

0000074e <_Li2c_write_return>:
     74e:	00 00       	nop
     750:	00 00       	nop
     752:	3d 9a       	sbi	0x07, 5	; 7
     754:	08 95       	ret
     ::
      [SCLDDR] "I"  (SCL_DDR), [SCLPIN] "I" (SCL_PIN), [SCLIN] "I" (SCL_IN),
      [SDAOUT] "I" (SDA_OUT), [SCLOUT] "I" (SCL_OUT),
      [SDADDR] "I"  (SDA_DDR), [SDAPIN] "I" (SDA_PIN), [SDAIN] "I" (SDA_IN)); 
  return true; // fooling the compiler
}
     756:	81 e0       	ldi	r24, 0x01	; 1
     758:	08 95       	ret

0000075a <i2c_read>:
  }  
  return TWDR;
}
#else
{
  __asm__ __volatile__ 
     75a:	71 e0       	ldi	r23, 0x01	; 1

0000075c <_Li2c_read_bit>:
     75c:	3d 9a       	sbi	0x07, 5	; 7
     75e:	3c 98       	cbi	0x07, 4	; 7
     760:	00 00       	nop
     762:	00 00       	nop
     764:	00 00       	nop
     766:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     76a:	3d 98       	cbi	0x07, 5	; 7
     76c:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     770:	a8 94       	cln
     772:	00 00       	nop
     774:	00 00       	nop
     776:	00 00       	nop
     778:	35 9b       	sbis	0x06, 5	; 6
     77a:	0e 94 3d 03 	call	0x67a	; 0x67a <ass_i2c_wait_scl_high>
     77e:	d2 f0       	brmi	.+52     	; 0x7b4 <_Li2c_read_return>
     780:	88 94       	clc
     782:	34 99       	sbic	0x06, 4	; 6
     784:	08 94       	sec
     786:	77 1f       	adc	r23, r23
     788:	48 f7       	brcc	.-46     	; 0x75c <_Li2c_read_bit>

0000078a <_Li2c_put_ack>:
     78a:	3d 9a       	sbi	0x07, 5	; 7
     78c:	80 30       	cpi	r24, 0x00	; 0
     78e:	19 f0       	breq	.+6      	; 0x796 <_Li2c_put_ack_low>
     790:	3c 98       	cbi	0x07, 4	; 7
     792:	0c 94 cc 03 	jmp	0x798	; 0x798 <_Li2c_put_ack_high>

00000796 <_Li2c_put_ack_low>:
     796:	3c 9a       	sbi	0x07, 4	; 7

00000798 <_Li2c_put_ack_high>:
     798:	00 00       	nop
     79a:	00 00       	nop
     79c:	00 00       	nop
     79e:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>
     7a2:	3d 98       	cbi	0x07, 5	; 7
     7a4:	a8 94       	cln
     7a6:	00 00       	nop
     7a8:	00 00       	nop
     7aa:	35 9b       	sbis	0x06, 5	; 6
     7ac:	0e 94 3d 03 	call	0x67a	; 0x67a <ass_i2c_wait_scl_high>
     7b0:	0e 94 38 03 	call	0x670	; 0x670 <ass_i2c_delay_half>

000007b4 <_Li2c_read_return>:
     7b4:	00 00       	nop
     7b6:	00 00       	nop
     7b8:	3d 9a       	sbi	0x07, 5	; 7
     7ba:	87 2f       	mov	r24, r23
     7bc:	99 27       	eor	r25, r25
     7be:	08 95       	ret
      [SCLDDR] "I"  (SCL_DDR), [SCLPIN] "I" (SCL_PIN), [SCLIN] "I" (SCL_IN),
      [SDAOUT] "I" (SDA_OUT), [SCLOUT] "I" (SCL_OUT),
      [SDADDR] "I"  (SDA_DDR), [SDAPIN] "I" (SDA_PIN), [SDAIN] "I" (SDA_IN) 
     ); 
  return ' '; // fool the compiler!
}
     7c0:	80 e2       	ldi	r24, 0x20	; 32
     7c2:	08 95       	ret

000007c4 <LED_on>:
	}
}

void LED_on(char* color)
{
	if(color == "red")
     7c4:	21 e0       	ldi	r18, 0x01	; 1
     7c6:	80 30       	cpi	r24, 0x00	; 0
     7c8:	92 07       	cpc	r25, r18
     7ca:	21 f4       	brne	.+8      	; 0x7d4 <LED_on+0x10>
	{
		PORTD |= (1<<5);
     7cc:	8b b1       	in	r24, 0x0b	; 11
     7ce:	80 62       	ori	r24, 0x20	; 32
     7d0:	8b b9       	out	0x0b, r24	; 11
     7d2:	08 95       	ret
	}else if (color == "green")
     7d4:	84 50       	subi	r24, 0x04	; 4
     7d6:	91 40       	sbci	r25, 0x01	; 1
     7d8:	19 f4       	brne	.+6      	; 0x7e0 <LED_on+0x1c>
	{
		PORTD |= (1<<4);
     7da:	8b b1       	in	r24, 0x0b	; 11
     7dc:	80 61       	ori	r24, 0x10	; 16
     7de:	8b b9       	out	0x0b, r24	; 11
     7e0:	08 95       	ret

000007e2 <LED_off>:
	}
}

void LED_off(char* color)
{
	if(color == "red")
     7e2:	21 e0       	ldi	r18, 0x01	; 1
     7e4:	80 30       	cpi	r24, 0x00	; 0
     7e6:	92 07       	cpc	r25, r18
     7e8:	21 f4       	brne	.+8      	; 0x7f2 <LED_off+0x10>
	{
		PORTD &= ~(1<<5);
     7ea:	8b b1       	in	r24, 0x0b	; 11
     7ec:	8f 7d       	andi	r24, 0xDF	; 223
     7ee:	8b b9       	out	0x0b, r24	; 11
     7f0:	08 95       	ret
	}else if (color == "green")
     7f2:	84 50       	subi	r24, 0x04	; 4
     7f4:	91 40       	sbci	r25, 0x01	; 1
     7f6:	19 f4       	brne	.+6      	; 0x7fe <LED_off+0x1c>
	{
		PORTD &= ~(1<<4);
     7f8:	8b b1       	in	r24, 0x0b	; 11
     7fa:	8f 7e       	andi	r24, 0xEF	; 239
     7fc:	8b b9       	out	0x0b, r24	; 11
     7fe:	08 95       	ret

00000800 <checkHumAndTemperature>:

#pragma region SideMethodes

void checkHumAndTemperature(int hum, int temp)
{
	if (hum/10 > 60 || hum/10 < 40 || temp/10 > 25 || temp/10 < 18)
     800:	80 59       	subi	r24, 0x90	; 144
     802:	91 40       	sbci	r25, 0x01	; 1
     804:	82 3d       	cpi	r24, 0xD2	; 210
     806:	91 05       	cpc	r25, r1
     808:	38 f4       	brcc	.+14     	; 0x818 <checkHumAndTemperature+0x18>
     80a:	64 30       	cpi	r22, 0x04	; 4
     80c:	21 e0       	ldi	r18, 0x01	; 1
     80e:	72 07       	cpc	r23, r18
     810:	1c f4       	brge	.+6      	; 0x818 <checkHumAndTemperature+0x18>
     812:	64 3b       	cpi	r22, 0xB4	; 180
     814:	71 05       	cpc	r23, r1
     816:	c4 f5       	brge	.+112    	; 0x888 <checkHumAndTemperature+0x88>
	{
		if ((hum/10 > 60 || hum/10 < 40) && (temp/10 > 25 || temp/10 < 18))
     818:	82 3d       	cpi	r24, 0xD2	; 210
     81a:	91 05       	cpc	r25, r1
     81c:	a8 f0       	brcs	.+42     	; 0x848 <checkHumAndTemperature+0x48>
     81e:	9b 01       	movw	r18, r22
     820:	24 5b       	subi	r18, 0xB4	; 180
     822:	31 09       	sbc	r19, r1
     824:	20 35       	cpi	r18, 0x50	; 80
     826:	31 05       	cpc	r19, r1
     828:	78 f0       	brcs	.+30     	; 0x848 <checkHumAndTemperature+0x48>
		{
			lcd_goto(15);
     82a:	8f e0       	ldi	r24, 0x0F	; 15
     82c:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <lcd_goto>
			lcd_puts("!");
     830:	8a e0       	ldi	r24, 0x0A	; 10
     832:	91 e0       	ldi	r25, 0x01	; 1
     834:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
			lcd_goto(79);
     838:	8f e4       	ldi	r24, 0x4F	; 79
     83a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <lcd_goto>
			lcd_puts("!");
     83e:	8a e0       	ldi	r24, 0x0A	; 10
     840:	91 e0       	ldi	r25, 0x01	; 1
     842:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
     846:	17 c0       	rjmp	.+46     	; 0x876 <checkHumAndTemperature+0x76>
			}else if (temp/10 > 25 || temp/10 < 18){
     848:	64 5b       	subi	r22, 0xB4	; 180
     84a:	71 09       	sbc	r23, r1
     84c:	60 35       	cpi	r22, 0x50	; 80
     84e:	71 05       	cpc	r23, r1
     850:	40 f0       	brcs	.+16     	; 0x862 <checkHumAndTemperature+0x62>
			lcd_goto(15);
     852:	8f e0       	ldi	r24, 0x0F	; 15
     854:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <lcd_goto>
			lcd_puts("!");
     858:	8a e0       	ldi	r24, 0x0A	; 10
     85a:	91 e0       	ldi	r25, 0x01	; 1
     85c:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
     860:	0a c0       	rjmp	.+20     	; 0x876 <checkHumAndTemperature+0x76>
			}else if (hum/10 > 60 || hum/10 < 40){
     862:	82 3d       	cpi	r24, 0xD2	; 210
     864:	91 05       	cpc	r25, r1
     866:	38 f0       	brcs	.+14     	; 0x876 <checkHumAndTemperature+0x76>
			lcd_goto(79);
     868:	8f e4       	ldi	r24, 0x4F	; 79
     86a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <lcd_goto>
			lcd_puts("!");
     86e:	8a e0       	ldi	r24, 0x0A	; 10
     870:	91 e0       	ldi	r25, 0x01	; 1
     872:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
		}
		
		LED_off("green");
     876:	84 e0       	ldi	r24, 0x04	; 4
     878:	91 e0       	ldi	r25, 0x01	; 1
     87a:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <LED_off>
		LED_on("red");
     87e:	80 e0       	ldi	r24, 0x00	; 0
     880:	91 e0       	ldi	r25, 0x01	; 1
     882:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <LED_on>
#pragma region SideMethodes

void checkHumAndTemperature(int hum, int temp)
{
	if (hum/10 > 60 || hum/10 < 40 || temp/10 > 25 || temp/10 < 18)
	{
     886:	08 95       	ret
		
		LED_off("green");
		LED_on("red");
	}else
	{
		LED_on("green");
     888:	84 e0       	ldi	r24, 0x04	; 4
     88a:	91 e0       	ldi	r25, 0x01	; 1
     88c:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <LED_on>
		LED_off("red");
     890:	80 e0       	ldi	r24, 0x00	; 0
     892:	91 e0       	ldi	r25, 0x01	; 1
     894:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <LED_off>
     898:	08 95       	ret

0000089a <weatherStation>:
	_delay_ms(1000);
	
}

void weatherStation()
{
     89a:	cf 92       	push	r12
     89c:	df 92       	push	r13
     89e:	ef 92       	push	r14
     8a0:	ff 92       	push	r15
     8a2:	0f 93       	push	r16
     8a4:	1f 93       	push	r17
     8a6:	cf 93       	push	r28
     8a8:	df 93       	push	r29
     8aa:	cd b7       	in	r28, 0x3d	; 61
     8ac:	de b7       	in	r29, 0x3e	; 62
     8ae:	2e 97       	sbiw	r28, 0x0e	; 14
     8b0:	0f b6       	in	r0, 0x3f	; 63
     8b2:	f8 94       	cli
     8b4:	de bf       	out	0x3e, r29	; 62
     8b6:	0f be       	out	0x3f, r0	; 63
     8b8:	cd bf       	out	0x3d, r28	; 61
	int temp, hum;
	char bufor[10];
	dhtxxconvert( DHTXX_DHT11, &PORTD, &DDRD, &PIND, ( 1 << 2 ) );
     8ba:	04 e0       	ldi	r16, 0x04	; 4
     8bc:	29 e2       	ldi	r18, 0x29	; 41
     8be:	30 e0       	ldi	r19, 0x00	; 0
     8c0:	4a e2       	ldi	r20, 0x2A	; 42
     8c2:	50 e0       	ldi	r21, 0x00	; 0
     8c4:	6b e2       	ldi	r22, 0x2B	; 43
     8c6:	70 e0       	ldi	r23, 0x00	; 0
     8c8:	80 e0       	ldi	r24, 0x00	; 0
     8ca:	0e 94 ba 01 	call	0x374	; 0x374 <dhtxxconvert>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8ce:	2f ef       	ldi	r18, 0xFF	; 255
     8d0:	83 ed       	ldi	r24, 0xD3	; 211
     8d2:	90 e3       	ldi	r25, 0x30	; 48
     8d4:	21 50       	subi	r18, 0x01	; 1
     8d6:	80 40       	sbci	r24, 0x00	; 0
     8d8:	90 40       	sbci	r25, 0x00	; 0
     8da:	e1 f7       	brne	.-8      	; 0x8d4 <weatherStation+0x3a>
     8dc:	00 c0       	rjmp	.+0      	; 0x8de <weatherStation+0x44>
     8de:	00 00       	nop
	_delay_ms(1000);
	dhtxxread( DHTXX_DHT11, &PORTD, &DDRD, &PIND, ( 1 << 2 ), &temp, &hum );
     8e0:	ce 01       	movw	r24, r28
     8e2:	03 96       	adiw	r24, 0x03	; 3
     8e4:	6c 01       	movw	r12, r24
     8e6:	02 97       	sbiw	r24, 0x02	; 2
     8e8:	7c 01       	movw	r14, r24
     8ea:	29 e2       	ldi	r18, 0x29	; 41
     8ec:	30 e0       	ldi	r19, 0x00	; 0
     8ee:	4a e2       	ldi	r20, 0x2A	; 42
     8f0:	50 e0       	ldi	r21, 0x00	; 0
     8f2:	6b e2       	ldi	r22, 0x2B	; 43
     8f4:	70 e0       	ldi	r23, 0x00	; 0
     8f6:	80 e0       	ldi	r24, 0x00	; 0
     8f8:	0e 94 d5 00 	call	0x1aa	; 0x1aa <dhtxxread>
	
	lcd_clrscr();
     8fc:	0e 94 80 02 	call	0x500	; 0x500 <lcd_clrscr>
	lcd_puts("Temp: ");
     900:	8c e0       	ldi	r24, 0x0C	; 12
     902:	91 e0       	ldi	r25, 0x01	; 1
     904:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
	itoa(temp/10, bufor, 10);
     908:	89 81       	ldd	r24, Y+1	; 0x01
     90a:	9a 81       	ldd	r25, Y+2	; 0x02
     90c:	0a e0       	ldi	r16, 0x0A	; 10
     90e:	10 e0       	ldi	r17, 0x00	; 0
     910:	b8 01       	movw	r22, r16
     912:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <__divmodhi4>
     916:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     918:	4a e0       	ldi	r20, 0x0A	; 10
     91a:	be 01       	movw	r22, r28
     91c:	6b 5f       	subi	r22, 0xFB	; 251
     91e:	7f 4f       	sbci	r23, 0xFF	; 255
     920:	0e 94 08 0a 	call	0x1410	; 0x1410 <__itoa_ncheck>
	lcd_puts(bufor);
     924:	ce 01       	movw	r24, r28
     926:	05 96       	adiw	r24, 0x05	; 5
     928:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
	lcd_puts(" C");
     92c:	83 e1       	ldi	r24, 0x13	; 19
     92e:	91 e0       	ldi	r25, 0x01	; 1
     930:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
	
	itoa(hum/10, bufor,10);
     934:	8b 81       	ldd	r24, Y+3	; 0x03
     936:	9c 81       	ldd	r25, Y+4	; 0x04
     938:	b8 01       	movw	r22, r16
     93a:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <__divmodhi4>
     93e:	cb 01       	movw	r24, r22
     940:	4a e0       	ldi	r20, 0x0A	; 10
     942:	be 01       	movw	r22, r28
     944:	6b 5f       	subi	r22, 0xFB	; 251
     946:	7f 4f       	sbci	r23, 0xFF	; 255
     948:	0e 94 08 0a 	call	0x1410	; 0x1410 <__itoa_ncheck>
	lcd_goto(64);
     94c:	80 e4       	ldi	r24, 0x40	; 64
     94e:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <lcd_goto>
	lcd_puts("Wilg: ");
     952:	86 e1       	ldi	r24, 0x16	; 22
     954:	91 e0       	ldi	r25, 0x01	; 1
     956:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
	lcd_puts(bufor);
     95a:	ce 01       	movw	r24, r28
     95c:	05 96       	adiw	r24, 0x05	; 5
     95e:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
	lcd_puts(" %");
     962:	8d e1       	ldi	r24, 0x1D	; 29
     964:	91 e0       	ldi	r25, 0x01	; 1
     966:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
	checkHumAndTemperature(hum, temp);
     96a:	69 81       	ldd	r22, Y+1	; 0x01
     96c:	7a 81       	ldd	r23, Y+2	; 0x02
     96e:	8b 81       	ldd	r24, Y+3	; 0x03
     970:	9c 81       	ldd	r25, Y+4	; 0x04
     972:	0e 94 00 04 	call	0x800	; 0x800 <checkHumAndTemperature>
}
     976:	2e 96       	adiw	r28, 0x0e	; 14
     978:	0f b6       	in	r0, 0x3f	; 63
     97a:	f8 94       	cli
     97c:	de bf       	out	0x3e, r29	; 62
     97e:	0f be       	out	0x3f, r0	; 63
     980:	cd bf       	out	0x3d, r28	; 61
     982:	df 91       	pop	r29
     984:	cf 91       	pop	r28
     986:	1f 91       	pop	r17
     988:	0f 91       	pop	r16
     98a:	ff 90       	pop	r15
     98c:	ef 90       	pop	r14
     98e:	df 90       	pop	r13
     990:	cf 90       	pop	r12
     992:	08 95       	ret

00000994 <reverse>:
	return i;
}

void reverse(char* str, int len)
{
	int i = 0, j = len - 1, temp;
     994:	61 50       	subi	r22, 0x01	; 1
     996:	71 09       	sbc	r23, r1
     998:	20 e0       	ldi	r18, 0x00	; 0
     99a:	30 e0       	ldi	r19, 0x00	; 0
	while (i < j) {
     99c:	0e c0       	rjmp	.+28     	; 0x9ba <reverse+0x26>
		temp = str[i];
     99e:	dc 01       	movw	r26, r24
     9a0:	a2 0f       	add	r26, r18
     9a2:	b3 1f       	adc	r27, r19
     9a4:	4c 91       	ld	r20, X
		str[i] = str[j];
     9a6:	fc 01       	movw	r30, r24
     9a8:	e6 0f       	add	r30, r22
     9aa:	f7 1f       	adc	r31, r23
     9ac:	50 81       	ld	r21, Z
     9ae:	5c 93       	st	X, r21
		str[j] = temp;
     9b0:	40 83       	st	Z, r20
		i++;
     9b2:	2f 5f       	subi	r18, 0xFF	; 255
     9b4:	3f 4f       	sbci	r19, 0xFF	; 255
		j--;
     9b6:	61 50       	subi	r22, 0x01	; 1
     9b8:	71 09       	sbc	r23, r1
}

void reverse(char* str, int len)
{
	int i = 0, j = len - 1, temp;
	while (i < j) {
     9ba:	26 17       	cp	r18, r22
     9bc:	37 07       	cpc	r19, r23
     9be:	7c f3       	brlt	.-34     	; 0x99e <reverse+0xa>
		str[i] = str[j];
		str[j] = temp;
		i++;
		j--;
	}
}
     9c0:	08 95       	ret

000009c2 <intToStr>:
		intToStr((int)fpart, res + i + 1, afterpoint);
	}
}

int intToStr(int x, char str[], int d)
{
     9c2:	0f 93       	push	r16
     9c4:	1f 93       	push	r17
     9c6:	cf 93       	push	r28
     9c8:	df 93       	push	r29
     9ca:	8b 01       	movw	r16, r22
     9cc:	9a 01       	movw	r18, r20
	int i = 0;
     9ce:	c0 e0       	ldi	r28, 0x00	; 0
     9d0:	d0 e0       	ldi	r29, 0x00	; 0
	while (x) {
     9d2:	0c c0       	rjmp	.+24     	; 0x9ec <intToStr+0x2a>
		str[i++] = (x % 10) + '0';
     9d4:	f8 01       	movw	r30, r16
     9d6:	ec 0f       	add	r30, r28
     9d8:	fd 1f       	adc	r31, r29
     9da:	6a e0       	ldi	r22, 0x0A	; 10
     9dc:	70 e0       	ldi	r23, 0x00	; 0
     9de:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <__divmodhi4>
     9e2:	80 5d       	subi	r24, 0xD0	; 208
     9e4:	80 83       	st	Z, r24
		x = x / 10;
     9e6:	86 2f       	mov	r24, r22
     9e8:	97 2f       	mov	r25, r23

int intToStr(int x, char str[], int d)
{
	int i = 0;
	while (x) {
		str[i++] = (x % 10) + '0';
     9ea:	21 96       	adiw	r28, 0x01	; 1
}

int intToStr(int x, char str[], int d)
{
	int i = 0;
	while (x) {
     9ec:	00 97       	sbiw	r24, 0x00	; 0
     9ee:	91 f7       	brne	.-28     	; 0x9d4 <intToStr+0x12>
     9f0:	06 c0       	rjmp	.+12     	; 0x9fe <intToStr+0x3c>
		str[i++] = (x % 10) + '0';
		x = x / 10;
	}
	while (i < d)
	str[i++] = '0';
     9f2:	f8 01       	movw	r30, r16
     9f4:	ec 0f       	add	r30, r28
     9f6:	fd 1f       	adc	r31, r29
     9f8:	80 e3       	ldi	r24, 0x30	; 48
     9fa:	80 83       	st	Z, r24
     9fc:	21 96       	adiw	r28, 0x01	; 1
	int i = 0;
	while (x) {
		str[i++] = (x % 10) + '0';
		x = x / 10;
	}
	while (i < d)
     9fe:	c2 17       	cp	r28, r18
     a00:	d3 07       	cpc	r29, r19
     a02:	bc f3       	brlt	.-18     	; 0x9f2 <intToStr+0x30>
	str[i++] = '0';
	
	reverse(str, i);
     a04:	be 01       	movw	r22, r28
     a06:	c8 01       	movw	r24, r16
     a08:	0e 94 ca 04 	call	0x994	; 0x994 <reverse>
	str[i] = '\0';
     a0c:	f8 01       	movw	r30, r16
     a0e:	ec 0f       	add	r30, r28
     a10:	fd 1f       	adc	r31, r29
     a12:	10 82       	st	Z, r1
	return i;
}
     a14:	ce 01       	movw	r24, r28
     a16:	df 91       	pop	r29
     a18:	cf 91       	pop	r28
     a1a:	1f 91       	pop	r17
     a1c:	0f 91       	pop	r16
     a1e:	08 95       	ret

00000a20 <ftoa>:
		PORTD &= ~(1<<4);
	}
}

void ftoa(float n, char* res, int afterpoint)
{
     a20:	4f 92       	push	r4
     a22:	5f 92       	push	r5
     a24:	6f 92       	push	r6
     a26:	7f 92       	push	r7
     a28:	8f 92       	push	r8
     a2a:	9f 92       	push	r9
     a2c:	af 92       	push	r10
     a2e:	bf 92       	push	r11
     a30:	ef 92       	push	r14
     a32:	ff 92       	push	r15
     a34:	0f 93       	push	r16
     a36:	1f 93       	push	r17
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
     a3c:	2b 01       	movw	r4, r22
     a3e:	3c 01       	movw	r6, r24
     a40:	7a 01       	movw	r14, r20
     a42:	89 01       	movw	r16, r18
	int ipart = (int)n;
     a44:	0e 94 b8 06 	call	0xd70	; 0xd70 <__fixsfsi>
     a48:	4b 01       	movw	r8, r22
     a4a:	5c 01       	movw	r10, r24
	float fpart = n - (float)ipart;
     a4c:	07 2e       	mov	r0, r23
     a4e:	00 0c       	add	r0, r0
     a50:	88 0b       	sbc	r24, r24
     a52:	99 0b       	sbc	r25, r25
     a54:	0e 94 f0 06 	call	0xde0	; 0xde0 <__floatsisf>
     a58:	9b 01       	movw	r18, r22
     a5a:	ac 01       	movw	r20, r24
     a5c:	c3 01       	movw	r24, r6
     a5e:	b2 01       	movw	r22, r4
     a60:	0e 94 4b 06 	call	0xc96	; 0xc96 <__subsf3>
     a64:	2b 01       	movw	r4, r22
     a66:	3c 01       	movw	r6, r24
	int i = intToStr(ipart, res, 0);
     a68:	40 e0       	ldi	r20, 0x00	; 0
     a6a:	50 e0       	ldi	r21, 0x00	; 0
     a6c:	b7 01       	movw	r22, r14
     a6e:	c4 01       	movw	r24, r8
     a70:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <intToStr>
     a74:	ec 01       	movw	r28, r24

	if (afterpoint != 0) {
     a76:	01 15       	cp	r16, r1
     a78:	11 05       	cpc	r17, r1
     a7a:	29 f1       	breq	.+74     	; 0xac6 <ftoa+0xa6>
		res[i] = '.';
     a7c:	f7 01       	movw	r30, r14
     a7e:	e8 0f       	add	r30, r24
     a80:	f9 1f       	adc	r31, r25
     a82:	8e e2       	ldi	r24, 0x2E	; 46
     a84:	80 83       	st	Z, r24
		fpart = fpart * pow(10, afterpoint);
     a86:	b8 01       	movw	r22, r16
     a88:	01 2e       	mov	r0, r17
     a8a:	00 0c       	add	r0, r0
     a8c:	88 0b       	sbc	r24, r24
     a8e:	99 0b       	sbc	r25, r25
     a90:	0e 94 f0 06 	call	0xde0	; 0xde0 <__floatsisf>
     a94:	9b 01       	movw	r18, r22
     a96:	ac 01       	movw	r20, r24
     a98:	60 e0       	ldi	r22, 0x00	; 0
     a9a:	70 e0       	ldi	r23, 0x00	; 0
     a9c:	80 e2       	ldi	r24, 0x20	; 32
     a9e:	91 e4       	ldi	r25, 0x41	; 65
     aa0:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <pow>
     aa4:	9b 01       	movw	r18, r22
     aa6:	ac 01       	movw	r20, r24
     aa8:	c3 01       	movw	r24, r6
     aaa:	b2 01       	movw	r22, r4
     aac:	0e 94 7c 07 	call	0xef8	; 0xef8 <__mulsf3>
		intToStr((int)fpart, res + i + 1, afterpoint);
     ab0:	21 96       	adiw	r28, 0x01	; 1
     ab2:	ce 0d       	add	r28, r14
     ab4:	df 1d       	adc	r29, r15
     ab6:	0e 94 b8 06 	call	0xd70	; 0xd70 <__fixsfsi>
     aba:	dc 01       	movw	r26, r24
     abc:	cb 01       	movw	r24, r22
     abe:	a8 01       	movw	r20, r16
     ac0:	be 01       	movw	r22, r28
     ac2:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <intToStr>
	}
}
     ac6:	df 91       	pop	r29
     ac8:	cf 91       	pop	r28
     aca:	1f 91       	pop	r17
     acc:	0f 91       	pop	r16
     ace:	ff 90       	pop	r15
     ad0:	ef 90       	pop	r14
     ad2:	bf 90       	pop	r11
     ad4:	af 90       	pop	r10
     ad6:	9f 90       	pop	r9
     ad8:	8f 90       	pop	r8
     ada:	7f 90       	pop	r7
     adc:	6f 90       	pop	r6
     ade:	5f 90       	pop	r5
     ae0:	4f 90       	pop	r4
     ae2:	08 95       	ret

00000ae4 <getBodyTemperature>:
	_delay_ms(1000);
	getBodyTemperature();
}

void getBodyTemperature()
{
     ae4:	ef 92       	push	r14
     ae6:	ff 92       	push	r15
     ae8:	1f 93       	push	r17
     aea:	cf 93       	push	r28
     aec:	df 93       	push	r29
     aee:	cd b7       	in	r28, 0x3d	; 61
     af0:	de b7       	in	r29, 0x3e	; 62
     af2:	2a 97       	sbiw	r28, 0x0a	; 10
     af4:	0f b6       	in	r0, 0x3f	; 63
     af6:	f8 94       	cli
     af8:	de bf       	out	0x3e, r29	; 62
     afa:	0f be       	out	0x3f, r0	; 63
     afc:	cd bf       	out	0x3d, r28	; 61
	int dev = 0x5A<<1;
	int data_low = 0;
	int data_high = 0;
	int pec = 0;
	
	i2c_start(dev+I2C_WRITE);
     afe:	84 eb       	ldi	r24, 0xB4	; 180
     b00:	0e 94 43 03 	call	0x686	; 0x686 <i2c_start>
	i2c_write(0x07);
     b04:	87 e0       	ldi	r24, 0x07	; 7
     b06:	0e 94 70 03 	call	0x6e0	; 0x6e0 <ass_i2c_write>

	i2c_rep_start(dev+I2C_READ);
     b0a:	85 eb       	ldi	r24, 0xB5	; 181
     b0c:	0e 94 4e 03 	call	0x69c	; 0x69c <i2c_rep_start>
	data_low = i2c_read(false);
     b10:	80 e0       	ldi	r24, 0x00	; 0
     b12:	0e 94 ad 03 	call	0x75a	; 0x75a <i2c_read>
     b16:	e8 2e       	mov	r14, r24
     b18:	f1 2c       	mov	r15, r1
	data_high = i2c_read(false);
     b1a:	80 e0       	ldi	r24, 0x00	; 0
     b1c:	0e 94 ad 03 	call	0x75a	; 0x75a <i2c_read>
     b20:	18 2f       	mov	r17, r24
	pec = i2c_read(true);
     b22:	81 e0       	ldi	r24, 0x01	; 1
     b24:	0e 94 ad 03 	call	0x75a	; 0x75a <i2c_read>
	i2c_stop();
     b28:	0e 94 62 03 	call	0x6c4	; 0x6c4 <ass_i2c_stop>
	
	double tempFactor = 0.02;
	double tempData = 0x0000;
	int frac;
	
	tempData = (double)(((data_high & 0x007F) << 8) + data_low);
     b2c:	1f 77       	andi	r17, 0x7F	; 127
     b2e:	61 2f       	mov	r22, r17
     b30:	70 e0       	ldi	r23, 0x00	; 0
     b32:	76 2f       	mov	r23, r22
     b34:	66 27       	eor	r22, r22
     b36:	6e 0d       	add	r22, r14
     b38:	7f 1d       	adc	r23, r15
     b3a:	07 2e       	mov	r0, r23
     b3c:	00 0c       	add	r0, r0
     b3e:	88 0b       	sbc	r24, r24
     b40:	99 0b       	sbc	r25, r25
     b42:	0e 94 f0 06 	call	0xde0	; 0xde0 <__floatsisf>
	tempData = (tempData * tempFactor)-0.01;
     b46:	2a e0       	ldi	r18, 0x0A	; 10
     b48:	37 ed       	ldi	r19, 0xD7	; 215
     b4a:	43 ea       	ldi	r20, 0xA3	; 163
     b4c:	5c e3       	ldi	r21, 0x3C	; 60
     b4e:	0e 94 7c 07 	call	0xef8	; 0xef8 <__mulsf3>
     b52:	2a e0       	ldi	r18, 0x0A	; 10
     b54:	37 ed       	ldi	r19, 0xD7	; 215
     b56:	43 e2       	ldi	r20, 0x23	; 35
     b58:	5c e3       	ldi	r21, 0x3C	; 60
     b5a:	0e 94 4b 06 	call	0xc96	; 0xc96 <__subsf3>
	
	float celcius = tempData - 273.15;
     b5e:	23 e3       	ldi	r18, 0x33	; 51
     b60:	33 e9       	ldi	r19, 0x93	; 147
     b62:	48 e8       	ldi	r20, 0x88	; 136
     b64:	53 e4       	ldi	r21, 0x43	; 67
     b66:	0e 94 4b 06 	call	0xc96	; 0xc96 <__subsf3>
	
	char bufor[10];
	ftoa(celcius, bufor, 1);
     b6a:	21 e0       	ldi	r18, 0x01	; 1
     b6c:	30 e0       	ldi	r19, 0x00	; 0
     b6e:	ae 01       	movw	r20, r28
     b70:	4f 5f       	subi	r20, 0xFF	; 255
     b72:	5f 4f       	sbci	r21, 0xFF	; 255
     b74:	0e 94 10 05 	call	0xa20	; 0xa20 <ftoa>
	lcd_clrscr();
     b78:	0e 94 80 02 	call	0x500	; 0x500 <lcd_clrscr>
	lcd_puts(bufor);
     b7c:	ce 01       	movw	r24, r28
     b7e:	01 96       	adiw	r24, 0x01	; 1
     b80:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
	lcd_puts(" C");
     b84:	83 e1       	ldi	r24, 0x13	; 19
     b86:	91 e0       	ldi	r25, 0x01	; 1
     b88:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
     b8c:	2f ef       	ldi	r18, 0xFF	; 255
     b8e:	83 ed       	ldi	r24, 0xD3	; 211
     b90:	90 e3       	ldi	r25, 0x30	; 48
     b92:	21 50       	subi	r18, 0x01	; 1
     b94:	80 40       	sbci	r24, 0x00	; 0
     b96:	90 40       	sbci	r25, 0x00	; 0
     b98:	e1 f7       	brne	.-8      	; 0xb92 <getBodyTemperature+0xae>
     b9a:	00 c0       	rjmp	.+0      	; 0xb9c <getBodyTemperature+0xb8>
     b9c:	00 00       	nop
	_delay_ms(1000);
	
}
     b9e:	2a 96       	adiw	r28, 0x0a	; 10
     ba0:	0f b6       	in	r0, 0x3f	; 63
     ba2:	f8 94       	cli
     ba4:	de bf       	out	0x3e, r29	; 62
     ba6:	0f be       	out	0x3f, r0	; 63
     ba8:	cd bf       	out	0x3d, r28	; 61
     baa:	df 91       	pop	r29
     bac:	cf 91       	pop	r28
     bae:	1f 91       	pop	r17
     bb0:	ff 90       	pop	r15
     bb2:	ef 90       	pop	r14
     bb4:	08 95       	ret

00000bb6 <bodyTemperature>:
}

#pragma region MainMethodes
void bodyTemperature()
{
	lcd_clrscr();
     bb6:	0e 94 80 02 	call	0x500	; 0x500 <lcd_clrscr>
	lcd_puts("Przystaw czolo");
     bba:	80 e2       	ldi	r24, 0x20	; 32
     bbc:	91 e0       	ldi	r25, 0x01	; 1
     bbe:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
	lcd_goto(0x40);
     bc2:	80 e4       	ldi	r24, 0x40	; 64
     bc4:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <lcd_goto>
	lcd_puts("do czujnika");
     bc8:	8f e2       	ldi	r24, 0x2F	; 47
     bca:	91 e0       	ldi	r25, 0x01	; 1
     bcc:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
	LED_off("green");
     bd0:	84 e0       	ldi	r24, 0x04	; 4
     bd2:	91 e0       	ldi	r25, 0x01	; 1
     bd4:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <LED_off>
	LED_off("red");
     bd8:	80 e0       	ldi	r24, 0x00	; 0
     bda:	91 e0       	ldi	r25, 0x01	; 1
     bdc:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <LED_off>
     be0:	2f ef       	ldi	r18, 0xFF	; 255
     be2:	83 ed       	ldi	r24, 0xD3	; 211
     be4:	90 e3       	ldi	r25, 0x30	; 48
     be6:	21 50       	subi	r18, 0x01	; 1
     be8:	80 40       	sbci	r24, 0x00	; 0
     bea:	90 40       	sbci	r25, 0x00	; 0
     bec:	e1 f7       	brne	.-8      	; 0xbe6 <bodyTemperature+0x30>
     bee:	00 c0       	rjmp	.+0      	; 0xbf0 <bodyTemperature+0x3a>
     bf0:	00 00       	nop
	_delay_ms(1000);
	
	lcd_clrscr();
     bf2:	0e 94 80 02 	call	0x500	; 0x500 <lcd_clrscr>
	lcd_puts("3 ");
     bf6:	8b e3       	ldi	r24, 0x3B	; 59
     bf8:	91 e0       	ldi	r25, 0x01	; 1
     bfa:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
	LED_on("green");
     bfe:	84 e0       	ldi	r24, 0x04	; 4
     c00:	91 e0       	ldi	r25, 0x01	; 1
     c02:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <LED_on>
     c06:	2f ef       	ldi	r18, 0xFF	; 255
     c08:	83 ed       	ldi	r24, 0xD3	; 211
     c0a:	90 e3       	ldi	r25, 0x30	; 48
     c0c:	21 50       	subi	r18, 0x01	; 1
     c0e:	80 40       	sbci	r24, 0x00	; 0
     c10:	90 40       	sbci	r25, 0x00	; 0
     c12:	e1 f7       	brne	.-8      	; 0xc0c <bodyTemperature+0x56>
     c14:	00 c0       	rjmp	.+0      	; 0xc16 <bodyTemperature+0x60>
     c16:	00 00       	nop
	_delay_ms(1000);
	
	lcd_puts("2 ");
     c18:	8e e3       	ldi	r24, 0x3E	; 62
     c1a:	91 e0       	ldi	r25, 0x01	; 1
     c1c:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
	LED_off("green");
     c20:	84 e0       	ldi	r24, 0x04	; 4
     c22:	91 e0       	ldi	r25, 0x01	; 1
     c24:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <LED_off>
	LED_on("red");
     c28:	80 e0       	ldi	r24, 0x00	; 0
     c2a:	91 e0       	ldi	r25, 0x01	; 1
     c2c:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <LED_on>
     c30:	2f ef       	ldi	r18, 0xFF	; 255
     c32:	83 ed       	ldi	r24, 0xD3	; 211
     c34:	90 e3       	ldi	r25, 0x30	; 48
     c36:	21 50       	subi	r18, 0x01	; 1
     c38:	80 40       	sbci	r24, 0x00	; 0
     c3a:	90 40       	sbci	r25, 0x00	; 0
     c3c:	e1 f7       	brne	.-8      	; 0xc36 <bodyTemperature+0x80>
     c3e:	00 c0       	rjmp	.+0      	; 0xc40 <bodyTemperature+0x8a>
     c40:	00 00       	nop
	_delay_ms(1000);
	
	lcd_puts("1");
     c42:	81 e4       	ldi	r24, 0x41	; 65
     c44:	91 e0       	ldi	r25, 0x01	; 1
     c46:	0e 94 88 02 	call	0x510	; 0x510 <lcd_puts>
	LED_off("red");
     c4a:	80 e0       	ldi	r24, 0x00	; 0
     c4c:	91 e0       	ldi	r25, 0x01	; 1
     c4e:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <LED_off>
	LED_on("green");
     c52:	84 e0       	ldi	r24, 0x04	; 4
     c54:	91 e0       	ldi	r25, 0x01	; 1
     c56:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <LED_on>
     c5a:	2f ef       	ldi	r18, 0xFF	; 255
     c5c:	83 ed       	ldi	r24, 0xD3	; 211
     c5e:	90 e3       	ldi	r25, 0x30	; 48
     c60:	21 50       	subi	r18, 0x01	; 1
     c62:	80 40       	sbci	r24, 0x00	; 0
     c64:	90 40       	sbci	r25, 0x00	; 0
     c66:	e1 f7       	brne	.-8      	; 0xc60 <bodyTemperature+0xaa>
     c68:	00 c0       	rjmp	.+0      	; 0xc6a <bodyTemperature+0xb4>
     c6a:	00 00       	nop
	_delay_ms(1000);
	getBodyTemperature();
     c6c:	0e 94 72 05 	call	0xae4	; 0xae4 <getBodyTemperature>
     c70:	08 95       	ret

00000c72 <main>:
#include "dhtxx.h"
#include "SoftI2CMaster.h"

int main(void)
{
	DDRD = 0x30;
     c72:	80 e3       	ldi	r24, 0x30	; 48
     c74:	8a b9       	out	0x0a, r24	; 10
	DDRD &= ~(1<<3);
     c76:	8a b1       	in	r24, 0x0a	; 10
     c78:	87 7f       	andi	r24, 0xF7	; 247
     c7a:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1<<3);
     c7c:	8b b1       	in	r24, 0x0b	; 11
     c7e:	88 60       	ori	r24, 0x08	; 8
     c80:	8b b9       	out	0x0b, r24	; 11
	
	lcd_init();
     c82:	0e 94 97 02 	call	0x52e	; 0x52e <lcd_init>
	
    while(1){		
		if (PIND & (1<<3))
     c86:	4b 9b       	sbis	0x09, 3	; 9
     c88:	03 c0       	rjmp	.+6      	; 0xc90 <main+0x1e>
		{
			weatherStation();
     c8a:	0e 94 4d 04 	call	0x89a	; 0x89a <weatherStation>
     c8e:	fb cf       	rjmp	.-10     	; 0xc86 <main+0x14>
		}else{
			bodyTemperature();
     c90:	0e 94 db 05 	call	0xbb6	; 0xbb6 <bodyTemperature>
     c94:	f8 cf       	rjmp	.-16     	; 0xc86 <main+0x14>

00000c96 <__subsf3>:
     c96:	50 58       	subi	r21, 0x80	; 128

00000c98 <__addsf3>:
     c98:	bb 27       	eor	r27, r27
     c9a:	aa 27       	eor	r26, r26
     c9c:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__addsf3x>
     ca0:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_round>
     ca4:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_pscA>
     ca8:	38 f0       	brcs	.+14     	; 0xcb8 <__addsf3+0x20>
     caa:	0e 94 3b 07 	call	0xe76	; 0xe76 <__fp_pscB>
     cae:	20 f0       	brcs	.+8      	; 0xcb8 <__addsf3+0x20>
     cb0:	39 f4       	brne	.+14     	; 0xcc0 <__addsf3+0x28>
     cb2:	9f 3f       	cpi	r25, 0xFF	; 255
     cb4:	19 f4       	brne	.+6      	; 0xcbc <__addsf3+0x24>
     cb6:	26 f4       	brtc	.+8      	; 0xcc0 <__addsf3+0x28>
     cb8:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_nan>
     cbc:	0e f4       	brtc	.+2      	; 0xcc0 <__addsf3+0x28>
     cbe:	e0 95       	com	r30
     cc0:	e7 fb       	bst	r30, 7
     cc2:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>

00000cc6 <__addsf3x>:
     cc6:	e9 2f       	mov	r30, r25
     cc8:	0e 94 53 07 	call	0xea6	; 0xea6 <__fp_split3>
     ccc:	58 f3       	brcs	.-42     	; 0xca4 <__addsf3+0xc>
     cce:	ba 17       	cp	r27, r26
     cd0:	62 07       	cpc	r22, r18
     cd2:	73 07       	cpc	r23, r19
     cd4:	84 07       	cpc	r24, r20
     cd6:	95 07       	cpc	r25, r21
     cd8:	20 f0       	brcs	.+8      	; 0xce2 <__addsf3x+0x1c>
     cda:	79 f4       	brne	.+30     	; 0xcfa <__addsf3x+0x34>
     cdc:	a6 f5       	brtc	.+104    	; 0xd46 <__addsf3x+0x80>
     cde:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_zero>
     ce2:	0e f4       	brtc	.+2      	; 0xce6 <__addsf3x+0x20>
     ce4:	e0 95       	com	r30
     ce6:	0b 2e       	mov	r0, r27
     ce8:	ba 2f       	mov	r27, r26
     cea:	a0 2d       	mov	r26, r0
     cec:	0b 01       	movw	r0, r22
     cee:	b9 01       	movw	r22, r18
     cf0:	90 01       	movw	r18, r0
     cf2:	0c 01       	movw	r0, r24
     cf4:	ca 01       	movw	r24, r20
     cf6:	a0 01       	movw	r20, r0
     cf8:	11 24       	eor	r1, r1
     cfa:	ff 27       	eor	r31, r31
     cfc:	59 1b       	sub	r21, r25
     cfe:	99 f0       	breq	.+38     	; 0xd26 <__addsf3x+0x60>
     d00:	59 3f       	cpi	r21, 0xF9	; 249
     d02:	50 f4       	brcc	.+20     	; 0xd18 <__addsf3x+0x52>
     d04:	50 3e       	cpi	r21, 0xE0	; 224
     d06:	68 f1       	brcs	.+90     	; 0xd62 <__addsf3x+0x9c>
     d08:	1a 16       	cp	r1, r26
     d0a:	f0 40       	sbci	r31, 0x00	; 0
     d0c:	a2 2f       	mov	r26, r18
     d0e:	23 2f       	mov	r18, r19
     d10:	34 2f       	mov	r19, r20
     d12:	44 27       	eor	r20, r20
     d14:	58 5f       	subi	r21, 0xF8	; 248
     d16:	f3 cf       	rjmp	.-26     	; 0xcfe <__addsf3x+0x38>
     d18:	46 95       	lsr	r20
     d1a:	37 95       	ror	r19
     d1c:	27 95       	ror	r18
     d1e:	a7 95       	ror	r26
     d20:	f0 40       	sbci	r31, 0x00	; 0
     d22:	53 95       	inc	r21
     d24:	c9 f7       	brne	.-14     	; 0xd18 <__addsf3x+0x52>
     d26:	7e f4       	brtc	.+30     	; 0xd46 <__addsf3x+0x80>
     d28:	1f 16       	cp	r1, r31
     d2a:	ba 0b       	sbc	r27, r26
     d2c:	62 0b       	sbc	r22, r18
     d2e:	73 0b       	sbc	r23, r19
     d30:	84 0b       	sbc	r24, r20
     d32:	ba f0       	brmi	.+46     	; 0xd62 <__addsf3x+0x9c>
     d34:	91 50       	subi	r25, 0x01	; 1
     d36:	a1 f0       	breq	.+40     	; 0xd60 <__addsf3x+0x9a>
     d38:	ff 0f       	add	r31, r31
     d3a:	bb 1f       	adc	r27, r27
     d3c:	66 1f       	adc	r22, r22
     d3e:	77 1f       	adc	r23, r23
     d40:	88 1f       	adc	r24, r24
     d42:	c2 f7       	brpl	.-16     	; 0xd34 <__addsf3x+0x6e>
     d44:	0e c0       	rjmp	.+28     	; 0xd62 <__addsf3x+0x9c>
     d46:	ba 0f       	add	r27, r26
     d48:	62 1f       	adc	r22, r18
     d4a:	73 1f       	adc	r23, r19
     d4c:	84 1f       	adc	r24, r20
     d4e:	48 f4       	brcc	.+18     	; 0xd62 <__addsf3x+0x9c>
     d50:	87 95       	ror	r24
     d52:	77 95       	ror	r23
     d54:	67 95       	ror	r22
     d56:	b7 95       	ror	r27
     d58:	f7 95       	ror	r31
     d5a:	9e 3f       	cpi	r25, 0xFE	; 254
     d5c:	08 f0       	brcs	.+2      	; 0xd60 <__addsf3x+0x9a>
     d5e:	b0 cf       	rjmp	.-160    	; 0xcc0 <__addsf3+0x28>
     d60:	93 95       	inc	r25
     d62:	88 0f       	add	r24, r24
     d64:	08 f0       	brcs	.+2      	; 0xd68 <__addsf3x+0xa2>
     d66:	99 27       	eor	r25, r25
     d68:	ee 0f       	add	r30, r30
     d6a:	97 95       	ror	r25
     d6c:	87 95       	ror	r24
     d6e:	08 95       	ret

00000d70 <__fixsfsi>:
     d70:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__fixunssfsi>
     d74:	68 94       	set
     d76:	b1 11       	cpse	r27, r1
     d78:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_szero>
     d7c:	08 95       	ret

00000d7e <__fixunssfsi>:
     d7e:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__fp_splitA>
     d82:	88 f0       	brcs	.+34     	; 0xda6 <__fixunssfsi+0x28>
     d84:	9f 57       	subi	r25, 0x7F	; 127
     d86:	98 f0       	brcs	.+38     	; 0xdae <__fixunssfsi+0x30>
     d88:	b9 2f       	mov	r27, r25
     d8a:	99 27       	eor	r25, r25
     d8c:	b7 51       	subi	r27, 0x17	; 23
     d8e:	b0 f0       	brcs	.+44     	; 0xdbc <__fixunssfsi+0x3e>
     d90:	e1 f0       	breq	.+56     	; 0xdca <__fixunssfsi+0x4c>
     d92:	66 0f       	add	r22, r22
     d94:	77 1f       	adc	r23, r23
     d96:	88 1f       	adc	r24, r24
     d98:	99 1f       	adc	r25, r25
     d9a:	1a f0       	brmi	.+6      	; 0xda2 <__fixunssfsi+0x24>
     d9c:	ba 95       	dec	r27
     d9e:	c9 f7       	brne	.-14     	; 0xd92 <__fixunssfsi+0x14>
     da0:	14 c0       	rjmp	.+40     	; 0xdca <__fixunssfsi+0x4c>
     da2:	b1 30       	cpi	r27, 0x01	; 1
     da4:	91 f0       	breq	.+36     	; 0xdca <__fixunssfsi+0x4c>
     da6:	0e 94 75 07 	call	0xeea	; 0xeea <__fp_zero>
     daa:	b1 e0       	ldi	r27, 0x01	; 1
     dac:	08 95       	ret
     dae:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_zero>
     db2:	67 2f       	mov	r22, r23
     db4:	78 2f       	mov	r23, r24
     db6:	88 27       	eor	r24, r24
     db8:	b8 5f       	subi	r27, 0xF8	; 248
     dba:	39 f0       	breq	.+14     	; 0xdca <__fixunssfsi+0x4c>
     dbc:	b9 3f       	cpi	r27, 0xF9	; 249
     dbe:	cc f3       	brlt	.-14     	; 0xdb2 <__fixunssfsi+0x34>
     dc0:	86 95       	lsr	r24
     dc2:	77 95       	ror	r23
     dc4:	67 95       	ror	r22
     dc6:	b3 95       	inc	r27
     dc8:	d9 f7       	brne	.-10     	; 0xdc0 <__fixunssfsi+0x42>
     dca:	3e f4       	brtc	.+14     	; 0xdda <__fixunssfsi+0x5c>
     dcc:	90 95       	com	r25
     dce:	80 95       	com	r24
     dd0:	70 95       	com	r23
     dd2:	61 95       	neg	r22
     dd4:	7f 4f       	sbci	r23, 0xFF	; 255
     dd6:	8f 4f       	sbci	r24, 0xFF	; 255
     dd8:	9f 4f       	sbci	r25, 0xFF	; 255
     dda:	08 95       	ret

00000ddc <__floatunsisf>:
     ddc:	e8 94       	clt
     dde:	09 c0       	rjmp	.+18     	; 0xdf2 <__floatsisf+0x12>

00000de0 <__floatsisf>:
     de0:	97 fb       	bst	r25, 7
     de2:	3e f4       	brtc	.+14     	; 0xdf2 <__floatsisf+0x12>
     de4:	90 95       	com	r25
     de6:	80 95       	com	r24
     de8:	70 95       	com	r23
     dea:	61 95       	neg	r22
     dec:	7f 4f       	sbci	r23, 0xFF	; 255
     dee:	8f 4f       	sbci	r24, 0xFF	; 255
     df0:	9f 4f       	sbci	r25, 0xFF	; 255
     df2:	99 23       	and	r25, r25
     df4:	a9 f0       	breq	.+42     	; 0xe20 <__floatsisf+0x40>
     df6:	f9 2f       	mov	r31, r25
     df8:	96 e9       	ldi	r25, 0x96	; 150
     dfa:	bb 27       	eor	r27, r27
     dfc:	93 95       	inc	r25
     dfe:	f6 95       	lsr	r31
     e00:	87 95       	ror	r24
     e02:	77 95       	ror	r23
     e04:	67 95       	ror	r22
     e06:	b7 95       	ror	r27
     e08:	f1 11       	cpse	r31, r1
     e0a:	f8 cf       	rjmp	.-16     	; 0xdfc <__floatsisf+0x1c>
     e0c:	fa f4       	brpl	.+62     	; 0xe4c <__floatsisf+0x6c>
     e0e:	bb 0f       	add	r27, r27
     e10:	11 f4       	brne	.+4      	; 0xe16 <__floatsisf+0x36>
     e12:	60 ff       	sbrs	r22, 0
     e14:	1b c0       	rjmp	.+54     	; 0xe4c <__floatsisf+0x6c>
     e16:	6f 5f       	subi	r22, 0xFF	; 255
     e18:	7f 4f       	sbci	r23, 0xFF	; 255
     e1a:	8f 4f       	sbci	r24, 0xFF	; 255
     e1c:	9f 4f       	sbci	r25, 0xFF	; 255
     e1e:	16 c0       	rjmp	.+44     	; 0xe4c <__floatsisf+0x6c>
     e20:	88 23       	and	r24, r24
     e22:	11 f0       	breq	.+4      	; 0xe28 <__floatsisf+0x48>
     e24:	96 e9       	ldi	r25, 0x96	; 150
     e26:	11 c0       	rjmp	.+34     	; 0xe4a <__floatsisf+0x6a>
     e28:	77 23       	and	r23, r23
     e2a:	21 f0       	breq	.+8      	; 0xe34 <__floatsisf+0x54>
     e2c:	9e e8       	ldi	r25, 0x8E	; 142
     e2e:	87 2f       	mov	r24, r23
     e30:	76 2f       	mov	r23, r22
     e32:	05 c0       	rjmp	.+10     	; 0xe3e <__floatsisf+0x5e>
     e34:	66 23       	and	r22, r22
     e36:	71 f0       	breq	.+28     	; 0xe54 <__floatsisf+0x74>
     e38:	96 e8       	ldi	r25, 0x86	; 134
     e3a:	86 2f       	mov	r24, r22
     e3c:	70 e0       	ldi	r23, 0x00	; 0
     e3e:	60 e0       	ldi	r22, 0x00	; 0
     e40:	2a f0       	brmi	.+10     	; 0xe4c <__floatsisf+0x6c>
     e42:	9a 95       	dec	r25
     e44:	66 0f       	add	r22, r22
     e46:	77 1f       	adc	r23, r23
     e48:	88 1f       	adc	r24, r24
     e4a:	da f7       	brpl	.-10     	; 0xe42 <__floatsisf+0x62>
     e4c:	88 0f       	add	r24, r24
     e4e:	96 95       	lsr	r25
     e50:	87 95       	ror	r24
     e52:	97 f9       	bld	r25, 7
     e54:	08 95       	ret

00000e56 <__fp_inf>:
     e56:	97 f9       	bld	r25, 7
     e58:	9f 67       	ori	r25, 0x7F	; 127
     e5a:	80 e8       	ldi	r24, 0x80	; 128
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	60 e0       	ldi	r22, 0x00	; 0
     e60:	08 95       	ret

00000e62 <__fp_nan>:
     e62:	9f ef       	ldi	r25, 0xFF	; 255
     e64:	80 ec       	ldi	r24, 0xC0	; 192
     e66:	08 95       	ret

00000e68 <__fp_pscA>:
     e68:	00 24       	eor	r0, r0
     e6a:	0a 94       	dec	r0
     e6c:	16 16       	cp	r1, r22
     e6e:	17 06       	cpc	r1, r23
     e70:	18 06       	cpc	r1, r24
     e72:	09 06       	cpc	r0, r25
     e74:	08 95       	ret

00000e76 <__fp_pscB>:
     e76:	00 24       	eor	r0, r0
     e78:	0a 94       	dec	r0
     e7a:	12 16       	cp	r1, r18
     e7c:	13 06       	cpc	r1, r19
     e7e:	14 06       	cpc	r1, r20
     e80:	05 06       	cpc	r0, r21
     e82:	08 95       	ret

00000e84 <__fp_round>:
     e84:	09 2e       	mov	r0, r25
     e86:	03 94       	inc	r0
     e88:	00 0c       	add	r0, r0
     e8a:	11 f4       	brne	.+4      	; 0xe90 <__fp_round+0xc>
     e8c:	88 23       	and	r24, r24
     e8e:	52 f0       	brmi	.+20     	; 0xea4 <__fp_round+0x20>
     e90:	bb 0f       	add	r27, r27
     e92:	40 f4       	brcc	.+16     	; 0xea4 <__fp_round+0x20>
     e94:	bf 2b       	or	r27, r31
     e96:	11 f4       	brne	.+4      	; 0xe9c <__fp_round+0x18>
     e98:	60 ff       	sbrs	r22, 0
     e9a:	04 c0       	rjmp	.+8      	; 0xea4 <__fp_round+0x20>
     e9c:	6f 5f       	subi	r22, 0xFF	; 255
     e9e:	7f 4f       	sbci	r23, 0xFF	; 255
     ea0:	8f 4f       	sbci	r24, 0xFF	; 255
     ea2:	9f 4f       	sbci	r25, 0xFF	; 255
     ea4:	08 95       	ret

00000ea6 <__fp_split3>:
     ea6:	57 fd       	sbrc	r21, 7
     ea8:	90 58       	subi	r25, 0x80	; 128
     eaa:	44 0f       	add	r20, r20
     eac:	55 1f       	adc	r21, r21
     eae:	59 f0       	breq	.+22     	; 0xec6 <__fp_splitA+0x10>
     eb0:	5f 3f       	cpi	r21, 0xFF	; 255
     eb2:	71 f0       	breq	.+28     	; 0xed0 <__fp_splitA+0x1a>
     eb4:	47 95       	ror	r20

00000eb6 <__fp_splitA>:
     eb6:	88 0f       	add	r24, r24
     eb8:	97 fb       	bst	r25, 7
     eba:	99 1f       	adc	r25, r25
     ebc:	61 f0       	breq	.+24     	; 0xed6 <__fp_splitA+0x20>
     ebe:	9f 3f       	cpi	r25, 0xFF	; 255
     ec0:	79 f0       	breq	.+30     	; 0xee0 <__fp_splitA+0x2a>
     ec2:	87 95       	ror	r24
     ec4:	08 95       	ret
     ec6:	12 16       	cp	r1, r18
     ec8:	13 06       	cpc	r1, r19
     eca:	14 06       	cpc	r1, r20
     ecc:	55 1f       	adc	r21, r21
     ece:	f2 cf       	rjmp	.-28     	; 0xeb4 <__fp_split3+0xe>
     ed0:	46 95       	lsr	r20
     ed2:	f1 df       	rcall	.-30     	; 0xeb6 <__fp_splitA>
     ed4:	08 c0       	rjmp	.+16     	; 0xee6 <__fp_splitA+0x30>
     ed6:	16 16       	cp	r1, r22
     ed8:	17 06       	cpc	r1, r23
     eda:	18 06       	cpc	r1, r24
     edc:	99 1f       	adc	r25, r25
     ede:	f1 cf       	rjmp	.-30     	; 0xec2 <__fp_splitA+0xc>
     ee0:	86 95       	lsr	r24
     ee2:	71 05       	cpc	r23, r1
     ee4:	61 05       	cpc	r22, r1
     ee6:	08 94       	sec
     ee8:	08 95       	ret

00000eea <__fp_zero>:
     eea:	e8 94       	clt

00000eec <__fp_szero>:
     eec:	bb 27       	eor	r27, r27
     eee:	66 27       	eor	r22, r22
     ef0:	77 27       	eor	r23, r23
     ef2:	cb 01       	movw	r24, r22
     ef4:	97 f9       	bld	r25, 7
     ef6:	08 95       	ret

00000ef8 <__mulsf3>:
     ef8:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3x>
     efc:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_round>
     f00:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_pscA>
     f04:	38 f0       	brcs	.+14     	; 0xf14 <__mulsf3+0x1c>
     f06:	0e 94 3b 07 	call	0xe76	; 0xe76 <__fp_pscB>
     f0a:	20 f0       	brcs	.+8      	; 0xf14 <__mulsf3+0x1c>
     f0c:	95 23       	and	r25, r21
     f0e:	11 f0       	breq	.+4      	; 0xf14 <__mulsf3+0x1c>
     f10:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>
     f14:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_nan>
     f18:	11 24       	eor	r1, r1
     f1a:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_szero>

00000f1e <__mulsf3x>:
     f1e:	0e 94 53 07 	call	0xea6	; 0xea6 <__fp_split3>
     f22:	70 f3       	brcs	.-36     	; 0xf00 <__mulsf3+0x8>

00000f24 <__mulsf3_pse>:
     f24:	95 9f       	mul	r25, r21
     f26:	c1 f3       	breq	.-16     	; 0xf18 <__mulsf3+0x20>
     f28:	95 0f       	add	r25, r21
     f2a:	50 e0       	ldi	r21, 0x00	; 0
     f2c:	55 1f       	adc	r21, r21
     f2e:	62 9f       	mul	r22, r18
     f30:	f0 01       	movw	r30, r0
     f32:	72 9f       	mul	r23, r18
     f34:	bb 27       	eor	r27, r27
     f36:	f0 0d       	add	r31, r0
     f38:	b1 1d       	adc	r27, r1
     f3a:	63 9f       	mul	r22, r19
     f3c:	aa 27       	eor	r26, r26
     f3e:	f0 0d       	add	r31, r0
     f40:	b1 1d       	adc	r27, r1
     f42:	aa 1f       	adc	r26, r26
     f44:	64 9f       	mul	r22, r20
     f46:	66 27       	eor	r22, r22
     f48:	b0 0d       	add	r27, r0
     f4a:	a1 1d       	adc	r26, r1
     f4c:	66 1f       	adc	r22, r22
     f4e:	82 9f       	mul	r24, r18
     f50:	22 27       	eor	r18, r18
     f52:	b0 0d       	add	r27, r0
     f54:	a1 1d       	adc	r26, r1
     f56:	62 1f       	adc	r22, r18
     f58:	73 9f       	mul	r23, r19
     f5a:	b0 0d       	add	r27, r0
     f5c:	a1 1d       	adc	r26, r1
     f5e:	62 1f       	adc	r22, r18
     f60:	83 9f       	mul	r24, r19
     f62:	a0 0d       	add	r26, r0
     f64:	61 1d       	adc	r22, r1
     f66:	22 1f       	adc	r18, r18
     f68:	74 9f       	mul	r23, r20
     f6a:	33 27       	eor	r19, r19
     f6c:	a0 0d       	add	r26, r0
     f6e:	61 1d       	adc	r22, r1
     f70:	23 1f       	adc	r18, r19
     f72:	84 9f       	mul	r24, r20
     f74:	60 0d       	add	r22, r0
     f76:	21 1d       	adc	r18, r1
     f78:	82 2f       	mov	r24, r18
     f7a:	76 2f       	mov	r23, r22
     f7c:	6a 2f       	mov	r22, r26
     f7e:	11 24       	eor	r1, r1
     f80:	9f 57       	subi	r25, 0x7F	; 127
     f82:	50 40       	sbci	r21, 0x00	; 0
     f84:	9a f0       	brmi	.+38     	; 0xfac <__mulsf3_pse+0x88>
     f86:	f1 f0       	breq	.+60     	; 0xfc4 <__mulsf3_pse+0xa0>
     f88:	88 23       	and	r24, r24
     f8a:	4a f0       	brmi	.+18     	; 0xf9e <__mulsf3_pse+0x7a>
     f8c:	ee 0f       	add	r30, r30
     f8e:	ff 1f       	adc	r31, r31
     f90:	bb 1f       	adc	r27, r27
     f92:	66 1f       	adc	r22, r22
     f94:	77 1f       	adc	r23, r23
     f96:	88 1f       	adc	r24, r24
     f98:	91 50       	subi	r25, 0x01	; 1
     f9a:	50 40       	sbci	r21, 0x00	; 0
     f9c:	a9 f7       	brne	.-22     	; 0xf88 <__mulsf3_pse+0x64>
     f9e:	9e 3f       	cpi	r25, 0xFE	; 254
     fa0:	51 05       	cpc	r21, r1
     fa2:	80 f0       	brcs	.+32     	; 0xfc4 <__mulsf3_pse+0xa0>
     fa4:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>
     fa8:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_szero>
     fac:	5f 3f       	cpi	r21, 0xFF	; 255
     fae:	e4 f3       	brlt	.-8      	; 0xfa8 <__mulsf3_pse+0x84>
     fb0:	98 3e       	cpi	r25, 0xE8	; 232
     fb2:	d4 f3       	brlt	.-12     	; 0xfa8 <__mulsf3_pse+0x84>
     fb4:	86 95       	lsr	r24
     fb6:	77 95       	ror	r23
     fb8:	67 95       	ror	r22
     fba:	b7 95       	ror	r27
     fbc:	f7 95       	ror	r31
     fbe:	e7 95       	ror	r30
     fc0:	9f 5f       	subi	r25, 0xFF	; 255
     fc2:	c1 f7       	brne	.-16     	; 0xfb4 <__mulsf3_pse+0x90>
     fc4:	fe 2b       	or	r31, r30
     fc6:	88 0f       	add	r24, r24
     fc8:	91 1d       	adc	r25, r1
     fca:	96 95       	lsr	r25
     fcc:	87 95       	ror	r24
     fce:	97 f9       	bld	r25, 7
     fd0:	08 95       	ret

00000fd2 <pow>:
     fd2:	fa 01       	movw	r30, r20
     fd4:	ee 0f       	add	r30, r30
     fd6:	ff 1f       	adc	r31, r31
     fd8:	30 96       	adiw	r30, 0x00	; 0
     fda:	21 05       	cpc	r18, r1
     fdc:	31 05       	cpc	r19, r1
     fde:	a1 f1       	breq	.+104    	; 0x1048 <pow+0x76>
     fe0:	61 15       	cp	r22, r1
     fe2:	71 05       	cpc	r23, r1
     fe4:	61 f4       	brne	.+24     	; 0xffe <pow+0x2c>
     fe6:	80 38       	cpi	r24, 0x80	; 128
     fe8:	bf e3       	ldi	r27, 0x3F	; 63
     fea:	9b 07       	cpc	r25, r27
     fec:	49 f1       	breq	.+82     	; 0x1040 <pow+0x6e>
     fee:	68 94       	set
     ff0:	90 38       	cpi	r25, 0x80	; 128
     ff2:	81 05       	cpc	r24, r1
     ff4:	61 f0       	breq	.+24     	; 0x100e <pow+0x3c>
     ff6:	80 38       	cpi	r24, 0x80	; 128
     ff8:	bf ef       	ldi	r27, 0xFF	; 255
     ffa:	9b 07       	cpc	r25, r27
     ffc:	41 f0       	breq	.+16     	; 0x100e <pow+0x3c>
     ffe:	99 23       	and	r25, r25
    1000:	4a f5       	brpl	.+82     	; 0x1054 <pow+0x82>
    1002:	ff 3f       	cpi	r31, 0xFF	; 255
    1004:	e1 05       	cpc	r30, r1
    1006:	31 05       	cpc	r19, r1
    1008:	21 05       	cpc	r18, r1
    100a:	19 f1       	breq	.+70     	; 0x1052 <pow+0x80>
    100c:	e8 94       	clt
    100e:	08 94       	sec
    1010:	e7 95       	ror	r30
    1012:	d9 01       	movw	r26, r18
    1014:	aa 23       	and	r26, r26
    1016:	29 f4       	brne	.+10     	; 0x1022 <pow+0x50>
    1018:	ab 2f       	mov	r26, r27
    101a:	be 2f       	mov	r27, r30
    101c:	f8 5f       	subi	r31, 0xF8	; 248
    101e:	d0 f3       	brcs	.-12     	; 0x1014 <pow+0x42>
    1020:	10 c0       	rjmp	.+32     	; 0x1042 <pow+0x70>
    1022:	ff 5f       	subi	r31, 0xFF	; 255
    1024:	70 f4       	brcc	.+28     	; 0x1042 <pow+0x70>
    1026:	a6 95       	lsr	r26
    1028:	e0 f7       	brcc	.-8      	; 0x1022 <pow+0x50>
    102a:	f7 39       	cpi	r31, 0x97	; 151
    102c:	50 f0       	brcs	.+20     	; 0x1042 <pow+0x70>
    102e:	19 f0       	breq	.+6      	; 0x1036 <pow+0x64>
    1030:	ff 3a       	cpi	r31, 0xAF	; 175
    1032:	38 f4       	brcc	.+14     	; 0x1042 <pow+0x70>
    1034:	9f 77       	andi	r25, 0x7F	; 127
    1036:	9f 93       	push	r25
    1038:	0d d0       	rcall	.+26     	; 0x1054 <pow+0x82>
    103a:	0f 90       	pop	r0
    103c:	07 fc       	sbrc	r0, 7
    103e:	90 58       	subi	r25, 0x80	; 128
    1040:	08 95       	ret
    1042:	46 f0       	brts	.+16     	; 0x1054 <pow+0x82>
    1044:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_nan>
    1048:	60 e0       	ldi	r22, 0x00	; 0
    104a:	70 e0       	ldi	r23, 0x00	; 0
    104c:	80 e8       	ldi	r24, 0x80	; 128
    104e:	9f e3       	ldi	r25, 0x3F	; 63
    1050:	08 95       	ret
    1052:	4f e7       	ldi	r20, 0x7F	; 127
    1054:	9f 77       	andi	r25, 0x7F	; 127
    1056:	5f 93       	push	r21
    1058:	4f 93       	push	r20
    105a:	3f 93       	push	r19
    105c:	2f 93       	push	r18
    105e:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <log>
    1062:	2f 91       	pop	r18
    1064:	3f 91       	pop	r19
    1066:	4f 91       	pop	r20
    1068:	5f 91       	pop	r21
    106a:	0e 94 7c 07 	call	0xef8	; 0xef8 <__mulsf3>
    106e:	0c 94 41 08 	jmp	0x1082	; 0x1082 <exp>
    1072:	29 f4       	brne	.+10     	; 0x107e <pow+0xac>
    1074:	16 f0       	brts	.+4      	; 0x107a <pow+0xa8>
    1076:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>
    107a:	0c 94 75 07 	jmp	0xeea	; 0xeea <__fp_zero>
    107e:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_nan>

00001082 <exp>:
    1082:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__fp_splitA>
    1086:	a8 f3       	brcs	.-22     	; 0x1072 <pow+0xa0>
    1088:	96 38       	cpi	r25, 0x86	; 134
    108a:	a0 f7       	brcc	.-24     	; 0x1074 <pow+0xa2>
    108c:	07 f8       	bld	r0, 7
    108e:	0f 92       	push	r0
    1090:	e8 94       	clt
    1092:	2b e3       	ldi	r18, 0x3B	; 59
    1094:	3a ea       	ldi	r19, 0xAA	; 170
    1096:	48 eb       	ldi	r20, 0xB8	; 184
    1098:	5f e7       	ldi	r21, 0x7F	; 127
    109a:	0e 94 92 07 	call	0xf24	; 0xf24 <__mulsf3_pse>
    109e:	0f 92       	push	r0
    10a0:	0f 92       	push	r0
    10a2:	0f 92       	push	r0
    10a4:	4d b7       	in	r20, 0x3d	; 61
    10a6:	5e b7       	in	r21, 0x3e	; 62
    10a8:	0f 92       	push	r0
    10aa:	0e 94 2c 09 	call	0x1258	; 0x1258 <modf>
    10ae:	e8 e6       	ldi	r30, 0x68	; 104
    10b0:	f0 e0       	ldi	r31, 0x00	; 0
    10b2:	0e 94 73 08 	call	0x10e6	; 0x10e6 <__fp_powser>
    10b6:	4f 91       	pop	r20
    10b8:	5f 91       	pop	r21
    10ba:	ef 91       	pop	r30
    10bc:	ff 91       	pop	r31
    10be:	e5 95       	asr	r30
    10c0:	ee 1f       	adc	r30, r30
    10c2:	ff 1f       	adc	r31, r31
    10c4:	49 f0       	breq	.+18     	; 0x10d8 <exp+0x56>
    10c6:	fe 57       	subi	r31, 0x7E	; 126
    10c8:	e0 68       	ori	r30, 0x80	; 128
    10ca:	44 27       	eor	r20, r20
    10cc:	ee 0f       	add	r30, r30
    10ce:	44 1f       	adc	r20, r20
    10d0:	fa 95       	dec	r31
    10d2:	e1 f7       	brne	.-8      	; 0x10cc <exp+0x4a>
    10d4:	41 95       	neg	r20
    10d6:	55 0b       	sbc	r21, r21
    10d8:	0e 94 a6 08 	call	0x114c	; 0x114c <ldexp>
    10dc:	0f 90       	pop	r0
    10de:	07 fe       	sbrs	r0, 7
    10e0:	0c 94 9a 08 	jmp	0x1134	; 0x1134 <inverse>
    10e4:	08 95       	ret

000010e6 <__fp_powser>:
    10e6:	df 93       	push	r29
    10e8:	cf 93       	push	r28
    10ea:	1f 93       	push	r17
    10ec:	0f 93       	push	r16
    10ee:	ff 92       	push	r15
    10f0:	ef 92       	push	r14
    10f2:	df 92       	push	r13
    10f4:	7b 01       	movw	r14, r22
    10f6:	8c 01       	movw	r16, r24
    10f8:	68 94       	set
    10fa:	06 c0       	rjmp	.+12     	; 0x1108 <__fp_powser+0x22>
    10fc:	da 2e       	mov	r13, r26
    10fe:	ef 01       	movw	r28, r30
    1100:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3x>
    1104:	fe 01       	movw	r30, r28
    1106:	e8 94       	clt
    1108:	a5 91       	lpm	r26, Z+
    110a:	25 91       	lpm	r18, Z+
    110c:	35 91       	lpm	r19, Z+
    110e:	45 91       	lpm	r20, Z+
    1110:	55 91       	lpm	r21, Z+
    1112:	a6 f3       	brts	.-24     	; 0x10fc <__fp_powser+0x16>
    1114:	ef 01       	movw	r28, r30
    1116:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__addsf3x>
    111a:	fe 01       	movw	r30, r28
    111c:	97 01       	movw	r18, r14
    111e:	a8 01       	movw	r20, r16
    1120:	da 94       	dec	r13
    1122:	69 f7       	brne	.-38     	; 0x10fe <__fp_powser+0x18>
    1124:	df 90       	pop	r13
    1126:	ef 90       	pop	r14
    1128:	ff 90       	pop	r15
    112a:	0f 91       	pop	r16
    112c:	1f 91       	pop	r17
    112e:	cf 91       	pop	r28
    1130:	df 91       	pop	r29
    1132:	08 95       	ret

00001134 <inverse>:
    1134:	9b 01       	movw	r18, r22
    1136:	ac 01       	movw	r20, r24
    1138:	60 e0       	ldi	r22, 0x00	; 0
    113a:	70 e0       	ldi	r23, 0x00	; 0
    113c:	80 e8       	ldi	r24, 0x80	; 128
    113e:	9f e3       	ldi	r25, 0x3F	; 63
    1140:	0c 94 60 09 	jmp	0x12c0	; 0x12c0 <__divsf3>
    1144:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>
    1148:	0c 94 d2 09 	jmp	0x13a4	; 0x13a4 <__fp_mpack>

0000114c <ldexp>:
    114c:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__fp_splitA>
    1150:	d8 f3       	brcs	.-10     	; 0x1148 <inverse+0x14>
    1152:	99 23       	and	r25, r25
    1154:	c9 f3       	breq	.-14     	; 0x1148 <inverse+0x14>
    1156:	94 0f       	add	r25, r20
    1158:	51 1d       	adc	r21, r1
    115a:	a3 f3       	brvs	.-24     	; 0x1144 <inverse+0x10>
    115c:	91 50       	subi	r25, 0x01	; 1
    115e:	50 40       	sbci	r21, 0x00	; 0
    1160:	94 f0       	brlt	.+36     	; 0x1186 <ldexp+0x3a>
    1162:	59 f0       	breq	.+22     	; 0x117a <ldexp+0x2e>
    1164:	88 23       	and	r24, r24
    1166:	32 f0       	brmi	.+12     	; 0x1174 <ldexp+0x28>
    1168:	66 0f       	add	r22, r22
    116a:	77 1f       	adc	r23, r23
    116c:	88 1f       	adc	r24, r24
    116e:	91 50       	subi	r25, 0x01	; 1
    1170:	50 40       	sbci	r21, 0x00	; 0
    1172:	c1 f7       	brne	.-16     	; 0x1164 <ldexp+0x18>
    1174:	9e 3f       	cpi	r25, 0xFE	; 254
    1176:	51 05       	cpc	r21, r1
    1178:	2c f7       	brge	.-54     	; 0x1144 <inverse+0x10>
    117a:	88 0f       	add	r24, r24
    117c:	91 1d       	adc	r25, r1
    117e:	96 95       	lsr	r25
    1180:	87 95       	ror	r24
    1182:	97 f9       	bld	r25, 7
    1184:	08 95       	ret
    1186:	5f 3f       	cpi	r21, 0xFF	; 255
    1188:	ac f0       	brlt	.+42     	; 0x11b4 <ldexp+0x68>
    118a:	98 3e       	cpi	r25, 0xE8	; 232
    118c:	9c f0       	brlt	.+38     	; 0x11b4 <ldexp+0x68>
    118e:	bb 27       	eor	r27, r27
    1190:	86 95       	lsr	r24
    1192:	77 95       	ror	r23
    1194:	67 95       	ror	r22
    1196:	b7 95       	ror	r27
    1198:	08 f4       	brcc	.+2      	; 0x119c <ldexp+0x50>
    119a:	b1 60       	ori	r27, 0x01	; 1
    119c:	93 95       	inc	r25
    119e:	c1 f7       	brne	.-16     	; 0x1190 <ldexp+0x44>
    11a0:	bb 0f       	add	r27, r27
    11a2:	58 f7       	brcc	.-42     	; 0x117a <ldexp+0x2e>
    11a4:	11 f4       	brne	.+4      	; 0x11aa <ldexp+0x5e>
    11a6:	60 ff       	sbrs	r22, 0
    11a8:	e8 cf       	rjmp	.-48     	; 0x117a <ldexp+0x2e>
    11aa:	6f 5f       	subi	r22, 0xFF	; 255
    11ac:	7f 4f       	sbci	r23, 0xFF	; 255
    11ae:	8f 4f       	sbci	r24, 0xFF	; 255
    11b0:	9f 4f       	sbci	r25, 0xFF	; 255
    11b2:	e3 cf       	rjmp	.-58     	; 0x117a <ldexp+0x2e>
    11b4:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_szero>
    11b8:	16 f0       	brts	.+4      	; 0x11be <ldexp+0x72>
    11ba:	0c 94 d2 09 	jmp	0x13a4	; 0x13a4 <__fp_mpack>
    11be:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_nan>
    11c2:	68 94       	set
    11c4:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>

000011c8 <log>:
    11c8:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__fp_splitA>
    11cc:	a8 f3       	brcs	.-22     	; 0x11b8 <ldexp+0x6c>
    11ce:	99 23       	and	r25, r25
    11d0:	c1 f3       	breq	.-16     	; 0x11c2 <ldexp+0x76>
    11d2:	ae f3       	brts	.-22     	; 0x11be <ldexp+0x72>
    11d4:	df 93       	push	r29
    11d6:	cf 93       	push	r28
    11d8:	1f 93       	push	r17
    11da:	0f 93       	push	r16
    11dc:	ff 92       	push	r15
    11de:	c9 2f       	mov	r28, r25
    11e0:	dd 27       	eor	r29, r29
    11e2:	88 23       	and	r24, r24
    11e4:	2a f0       	brmi	.+10     	; 0x11f0 <log+0x28>
    11e6:	21 97       	sbiw	r28, 0x01	; 1
    11e8:	66 0f       	add	r22, r22
    11ea:	77 1f       	adc	r23, r23
    11ec:	88 1f       	adc	r24, r24
    11ee:	da f7       	brpl	.-10     	; 0x11e6 <log+0x1e>
    11f0:	20 e0       	ldi	r18, 0x00	; 0
    11f2:	30 e0       	ldi	r19, 0x00	; 0
    11f4:	40 e8       	ldi	r20, 0x80	; 128
    11f6:	5f eb       	ldi	r21, 0xBF	; 191
    11f8:	9f e3       	ldi	r25, 0x3F	; 63
    11fa:	88 39       	cpi	r24, 0x98	; 152
    11fc:	20 f0       	brcs	.+8      	; 0x1206 <log+0x3e>
    11fe:	80 3e       	cpi	r24, 0xE0	; 224
    1200:	38 f0       	brcs	.+14     	; 0x1210 <log+0x48>
    1202:	21 96       	adiw	r28, 0x01	; 1
    1204:	8f 77       	andi	r24, 0x7F	; 127
    1206:	0e 94 4c 06 	call	0xc98	; 0xc98 <__addsf3>
    120a:	e0 e9       	ldi	r30, 0x90	; 144
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	04 c0       	rjmp	.+8      	; 0x1218 <log+0x50>
    1210:	0e 94 4c 06 	call	0xc98	; 0xc98 <__addsf3>
    1214:	ed eb       	ldi	r30, 0xBD	; 189
    1216:	f0 e0       	ldi	r31, 0x00	; 0
    1218:	0e 94 73 08 	call	0x10e6	; 0x10e6 <__fp_powser>
    121c:	8b 01       	movw	r16, r22
    121e:	be 01       	movw	r22, r28
    1220:	ec 01       	movw	r28, r24
    1222:	fb 2e       	mov	r15, r27
    1224:	6f 57       	subi	r22, 0x7F	; 127
    1226:	71 09       	sbc	r23, r1
    1228:	75 95       	asr	r23
    122a:	77 1f       	adc	r23, r23
    122c:	88 0b       	sbc	r24, r24
    122e:	99 0b       	sbc	r25, r25
    1230:	0e 94 f0 06 	call	0xde0	; 0xde0 <__floatsisf>
    1234:	28 e1       	ldi	r18, 0x18	; 24
    1236:	32 e7       	ldi	r19, 0x72	; 114
    1238:	41 e3       	ldi	r20, 0x31	; 49
    123a:	5f e3       	ldi	r21, 0x3F	; 63
    123c:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3x>
    1240:	af 2d       	mov	r26, r15
    1242:	98 01       	movw	r18, r16
    1244:	ae 01       	movw	r20, r28
    1246:	ff 90       	pop	r15
    1248:	0f 91       	pop	r16
    124a:	1f 91       	pop	r17
    124c:	cf 91       	pop	r28
    124e:	df 91       	pop	r29
    1250:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__addsf3x>
    1254:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_round>

00001258 <modf>:
    1258:	fa 01       	movw	r30, r20
    125a:	dc 01       	movw	r26, r24
    125c:	aa 0f       	add	r26, r26
    125e:	bb 1f       	adc	r27, r27
    1260:	9b 01       	movw	r18, r22
    1262:	ac 01       	movw	r20, r24
    1264:	bf 57       	subi	r27, 0x7F	; 127
    1266:	28 f4       	brcc	.+10     	; 0x1272 <modf+0x1a>
    1268:	22 27       	eor	r18, r18
    126a:	33 27       	eor	r19, r19
    126c:	44 27       	eor	r20, r20
    126e:	50 78       	andi	r21, 0x80	; 128
    1270:	20 c0       	rjmp	.+64     	; 0x12b2 <modf+0x5a>
    1272:	b7 51       	subi	r27, 0x17	; 23
    1274:	90 f4       	brcc	.+36     	; 0x129a <modf+0x42>
    1276:	ab 2f       	mov	r26, r27
    1278:	00 24       	eor	r0, r0
    127a:	46 95       	lsr	r20
    127c:	37 95       	ror	r19
    127e:	27 95       	ror	r18
    1280:	01 1c       	adc	r0, r1
    1282:	a3 95       	inc	r26
    1284:	d2 f3       	brmi	.-12     	; 0x127a <modf+0x22>
    1286:	00 20       	and	r0, r0
    1288:	71 f0       	breq	.+28     	; 0x12a6 <modf+0x4e>
    128a:	22 0f       	add	r18, r18
    128c:	33 1f       	adc	r19, r19
    128e:	44 1f       	adc	r20, r20
    1290:	b3 95       	inc	r27
    1292:	da f3       	brmi	.-10     	; 0x128a <modf+0x32>
    1294:	0e d0       	rcall	.+28     	; 0x12b2 <modf+0x5a>
    1296:	0c 94 4b 06 	jmp	0xc96	; 0xc96 <__subsf3>
    129a:	61 30       	cpi	r22, 0x01	; 1
    129c:	71 05       	cpc	r23, r1
    129e:	a0 e8       	ldi	r26, 0x80	; 128
    12a0:	8a 07       	cpc	r24, r26
    12a2:	b9 46       	sbci	r27, 0x69	; 105
    12a4:	30 f4       	brcc	.+12     	; 0x12b2 <modf+0x5a>
    12a6:	9b 01       	movw	r18, r22
    12a8:	ac 01       	movw	r20, r24
    12aa:	66 27       	eor	r22, r22
    12ac:	77 27       	eor	r23, r23
    12ae:	88 27       	eor	r24, r24
    12b0:	90 78       	andi	r25, 0x80	; 128
    12b2:	30 96       	adiw	r30, 0x00	; 0
    12b4:	21 f0       	breq	.+8      	; 0x12be <modf+0x66>
    12b6:	20 83       	st	Z, r18
    12b8:	31 83       	std	Z+1, r19	; 0x01
    12ba:	42 83       	std	Z+2, r20	; 0x02
    12bc:	53 83       	std	Z+3, r21	; 0x03
    12be:	08 95       	ret

000012c0 <__divsf3>:
    12c0:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__divsf3x>
    12c4:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_round>
    12c8:	0e 94 3b 07 	call	0xe76	; 0xe76 <__fp_pscB>
    12cc:	58 f0       	brcs	.+22     	; 0x12e4 <__divsf3+0x24>
    12ce:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_pscA>
    12d2:	40 f0       	brcs	.+16     	; 0x12e4 <__divsf3+0x24>
    12d4:	29 f4       	brne	.+10     	; 0x12e0 <__divsf3+0x20>
    12d6:	5f 3f       	cpi	r21, 0xFF	; 255
    12d8:	29 f0       	breq	.+10     	; 0x12e4 <__divsf3+0x24>
    12da:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>
    12de:	51 11       	cpse	r21, r1
    12e0:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_szero>
    12e4:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_nan>

000012e8 <__divsf3x>:
    12e8:	0e 94 53 07 	call	0xea6	; 0xea6 <__fp_split3>
    12ec:	68 f3       	brcs	.-38     	; 0x12c8 <__divsf3+0x8>

000012ee <__divsf3_pse>:
    12ee:	99 23       	and	r25, r25
    12f0:	b1 f3       	breq	.-20     	; 0x12de <__divsf3+0x1e>
    12f2:	55 23       	and	r21, r21
    12f4:	91 f3       	breq	.-28     	; 0x12da <__divsf3+0x1a>
    12f6:	95 1b       	sub	r25, r21
    12f8:	55 0b       	sbc	r21, r21
    12fa:	bb 27       	eor	r27, r27
    12fc:	aa 27       	eor	r26, r26
    12fe:	62 17       	cp	r22, r18
    1300:	73 07       	cpc	r23, r19
    1302:	84 07       	cpc	r24, r20
    1304:	38 f0       	brcs	.+14     	; 0x1314 <__divsf3_pse+0x26>
    1306:	9f 5f       	subi	r25, 0xFF	; 255
    1308:	5f 4f       	sbci	r21, 0xFF	; 255
    130a:	22 0f       	add	r18, r18
    130c:	33 1f       	adc	r19, r19
    130e:	44 1f       	adc	r20, r20
    1310:	aa 1f       	adc	r26, r26
    1312:	a9 f3       	breq	.-22     	; 0x12fe <__divsf3_pse+0x10>
    1314:	35 d0       	rcall	.+106    	; 0x1380 <__divsf3_pse+0x92>
    1316:	0e 2e       	mov	r0, r30
    1318:	3a f0       	brmi	.+14     	; 0x1328 <__divsf3_pse+0x3a>
    131a:	e0 e8       	ldi	r30, 0x80	; 128
    131c:	32 d0       	rcall	.+100    	; 0x1382 <__divsf3_pse+0x94>
    131e:	91 50       	subi	r25, 0x01	; 1
    1320:	50 40       	sbci	r21, 0x00	; 0
    1322:	e6 95       	lsr	r30
    1324:	00 1c       	adc	r0, r0
    1326:	ca f7       	brpl	.-14     	; 0x131a <__divsf3_pse+0x2c>
    1328:	2b d0       	rcall	.+86     	; 0x1380 <__divsf3_pse+0x92>
    132a:	fe 2f       	mov	r31, r30
    132c:	29 d0       	rcall	.+82     	; 0x1380 <__divsf3_pse+0x92>
    132e:	66 0f       	add	r22, r22
    1330:	77 1f       	adc	r23, r23
    1332:	88 1f       	adc	r24, r24
    1334:	bb 1f       	adc	r27, r27
    1336:	26 17       	cp	r18, r22
    1338:	37 07       	cpc	r19, r23
    133a:	48 07       	cpc	r20, r24
    133c:	ab 07       	cpc	r26, r27
    133e:	b0 e8       	ldi	r27, 0x80	; 128
    1340:	09 f0       	breq	.+2      	; 0x1344 <__divsf3_pse+0x56>
    1342:	bb 0b       	sbc	r27, r27
    1344:	80 2d       	mov	r24, r0
    1346:	bf 01       	movw	r22, r30
    1348:	ff 27       	eor	r31, r31
    134a:	93 58       	subi	r25, 0x83	; 131
    134c:	5f 4f       	sbci	r21, 0xFF	; 255
    134e:	3a f0       	brmi	.+14     	; 0x135e <__divsf3_pse+0x70>
    1350:	9e 3f       	cpi	r25, 0xFE	; 254
    1352:	51 05       	cpc	r21, r1
    1354:	78 f0       	brcs	.+30     	; 0x1374 <__divsf3_pse+0x86>
    1356:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_inf>
    135a:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_szero>
    135e:	5f 3f       	cpi	r21, 0xFF	; 255
    1360:	e4 f3       	brlt	.-8      	; 0x135a <__divsf3_pse+0x6c>
    1362:	98 3e       	cpi	r25, 0xE8	; 232
    1364:	d4 f3       	brlt	.-12     	; 0x135a <__divsf3_pse+0x6c>
    1366:	86 95       	lsr	r24
    1368:	77 95       	ror	r23
    136a:	67 95       	ror	r22
    136c:	b7 95       	ror	r27
    136e:	f7 95       	ror	r31
    1370:	9f 5f       	subi	r25, 0xFF	; 255
    1372:	c9 f7       	brne	.-14     	; 0x1366 <__divsf3_pse+0x78>
    1374:	88 0f       	add	r24, r24
    1376:	91 1d       	adc	r25, r1
    1378:	96 95       	lsr	r25
    137a:	87 95       	ror	r24
    137c:	97 f9       	bld	r25, 7
    137e:	08 95       	ret
    1380:	e1 e0       	ldi	r30, 0x01	; 1
    1382:	66 0f       	add	r22, r22
    1384:	77 1f       	adc	r23, r23
    1386:	88 1f       	adc	r24, r24
    1388:	bb 1f       	adc	r27, r27
    138a:	62 17       	cp	r22, r18
    138c:	73 07       	cpc	r23, r19
    138e:	84 07       	cpc	r24, r20
    1390:	ba 07       	cpc	r27, r26
    1392:	20 f0       	brcs	.+8      	; 0x139c <__divsf3_pse+0xae>
    1394:	62 1b       	sub	r22, r18
    1396:	73 0b       	sbc	r23, r19
    1398:	84 0b       	sbc	r24, r20
    139a:	ba 0b       	sbc	r27, r26
    139c:	ee 1f       	adc	r30, r30
    139e:	88 f7       	brcc	.-30     	; 0x1382 <__divsf3_pse+0x94>
    13a0:	e0 95       	com	r30
    13a2:	08 95       	ret

000013a4 <__fp_mpack>:
    13a4:	9f 3f       	cpi	r25, 0xFF	; 255
    13a6:	31 f0       	breq	.+12     	; 0x13b4 <__fp_mpack_finite+0xc>

000013a8 <__fp_mpack_finite>:
    13a8:	91 50       	subi	r25, 0x01	; 1
    13aa:	20 f4       	brcc	.+8      	; 0x13b4 <__fp_mpack_finite+0xc>
    13ac:	87 95       	ror	r24
    13ae:	77 95       	ror	r23
    13b0:	67 95       	ror	r22
    13b2:	b7 95       	ror	r27
    13b4:	88 0f       	add	r24, r24
    13b6:	91 1d       	adc	r25, r1
    13b8:	96 95       	lsr	r25
    13ba:	87 95       	ror	r24
    13bc:	97 f9       	bld	r25, 7
    13be:	08 95       	ret

000013c0 <__divmodhi4>:
    13c0:	97 fb       	bst	r25, 7
    13c2:	07 2e       	mov	r0, r23
    13c4:	16 f4       	brtc	.+4      	; 0x13ca <__divmodhi4+0xa>
    13c6:	00 94       	com	r0
    13c8:	07 d0       	rcall	.+14     	; 0x13d8 <__divmodhi4_neg1>
    13ca:	77 fd       	sbrc	r23, 7
    13cc:	09 d0       	rcall	.+18     	; 0x13e0 <__divmodhi4_neg2>
    13ce:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__udivmodhi4>
    13d2:	07 fc       	sbrc	r0, 7
    13d4:	05 d0       	rcall	.+10     	; 0x13e0 <__divmodhi4_neg2>
    13d6:	3e f4       	brtc	.+14     	; 0x13e6 <__divmodhi4_exit>

000013d8 <__divmodhi4_neg1>:
    13d8:	90 95       	com	r25
    13da:	81 95       	neg	r24
    13dc:	9f 4f       	sbci	r25, 0xFF	; 255
    13de:	08 95       	ret

000013e0 <__divmodhi4_neg2>:
    13e0:	70 95       	com	r23
    13e2:	61 95       	neg	r22
    13e4:	7f 4f       	sbci	r23, 0xFF	; 255

000013e6 <__divmodhi4_exit>:
    13e6:	08 95       	ret

000013e8 <__udivmodhi4>:
    13e8:	aa 1b       	sub	r26, r26
    13ea:	bb 1b       	sub	r27, r27
    13ec:	51 e1       	ldi	r21, 0x11	; 17
    13ee:	07 c0       	rjmp	.+14     	; 0x13fe <__udivmodhi4_ep>

000013f0 <__udivmodhi4_loop>:
    13f0:	aa 1f       	adc	r26, r26
    13f2:	bb 1f       	adc	r27, r27
    13f4:	a6 17       	cp	r26, r22
    13f6:	b7 07       	cpc	r27, r23
    13f8:	10 f0       	brcs	.+4      	; 0x13fe <__udivmodhi4_ep>
    13fa:	a6 1b       	sub	r26, r22
    13fc:	b7 0b       	sbc	r27, r23

000013fe <__udivmodhi4_ep>:
    13fe:	88 1f       	adc	r24, r24
    1400:	99 1f       	adc	r25, r25
    1402:	5a 95       	dec	r21
    1404:	a9 f7       	brne	.-22     	; 0x13f0 <__udivmodhi4_loop>
    1406:	80 95       	com	r24
    1408:	90 95       	com	r25
    140a:	bc 01       	movw	r22, r24
    140c:	cd 01       	movw	r24, r26
    140e:	08 95       	ret

00001410 <__itoa_ncheck>:
    1410:	bb 27       	eor	r27, r27
    1412:	4a 30       	cpi	r20, 0x0A	; 10
    1414:	31 f4       	brne	.+12     	; 0x1422 <__itoa_ncheck+0x12>
    1416:	99 23       	and	r25, r25
    1418:	22 f4       	brpl	.+8      	; 0x1422 <__itoa_ncheck+0x12>
    141a:	bd e2       	ldi	r27, 0x2D	; 45
    141c:	90 95       	com	r25
    141e:	81 95       	neg	r24
    1420:	9f 4f       	sbci	r25, 0xFF	; 255
    1422:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__utoa_common>

00001426 <__utoa_ncheck>:
    1426:	bb 27       	eor	r27, r27

00001428 <__utoa_common>:
    1428:	fb 01       	movw	r30, r22
    142a:	55 27       	eor	r21, r21
    142c:	aa 27       	eor	r26, r26
    142e:	88 0f       	add	r24, r24
    1430:	99 1f       	adc	r25, r25
    1432:	aa 1f       	adc	r26, r26
    1434:	a4 17       	cp	r26, r20
    1436:	10 f0       	brcs	.+4      	; 0x143c <__utoa_common+0x14>
    1438:	a4 1b       	sub	r26, r20
    143a:	83 95       	inc	r24
    143c:	50 51       	subi	r21, 0x10	; 16
    143e:	b9 f7       	brne	.-18     	; 0x142e <__utoa_common+0x6>
    1440:	a0 5d       	subi	r26, 0xD0	; 208
    1442:	aa 33       	cpi	r26, 0x3A	; 58
    1444:	08 f0       	brcs	.+2      	; 0x1448 <__utoa_common+0x20>
    1446:	a9 5d       	subi	r26, 0xD9	; 217
    1448:	a1 93       	st	Z+, r26
    144a:	00 97       	sbiw	r24, 0x00	; 0
    144c:	79 f7       	brne	.-34     	; 0x142c <__utoa_common+0x4>
    144e:	b1 11       	cpse	r27, r1
    1450:	b1 93       	st	Z+, r27
    1452:	11 92       	st	Z+, r1
    1454:	cb 01       	movw	r24, r22
    1456:	0c 94 2d 0a 	jmp	0x145a	; 0x145a <strrev>

0000145a <strrev>:
    145a:	dc 01       	movw	r26, r24
    145c:	fc 01       	movw	r30, r24
    145e:	67 2f       	mov	r22, r23
    1460:	71 91       	ld	r23, Z+
    1462:	77 23       	and	r23, r23
    1464:	e1 f7       	brne	.-8      	; 0x145e <strrev+0x4>
    1466:	32 97       	sbiw	r30, 0x02	; 2
    1468:	04 c0       	rjmp	.+8      	; 0x1472 <strrev+0x18>
    146a:	7c 91       	ld	r23, X
    146c:	6d 93       	st	X+, r22
    146e:	70 83       	st	Z, r23
    1470:	62 91       	ld	r22, -Z
    1472:	ae 17       	cp	r26, r30
    1474:	bf 07       	cpc	r27, r31
    1476:	c8 f3       	brcs	.-14     	; 0x146a <strrev+0x10>
    1478:	08 95       	ret

0000147a <_exit>:
    147a:	f8 94       	cli

0000147c <__stop_program>:
    147c:	ff cf       	rjmp	.-2      	; 0x147c <__stop_program>
